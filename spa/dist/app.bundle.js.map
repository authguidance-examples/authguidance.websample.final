{"version":3,"sources":["webpack:///../node_modules/moment/locale|sync|/^/.*$","webpack:///./api/client/apiClient.ts","webpack:///./app/app.tsx","webpack:///./app/iframeApp.ts","webpack:///./configuration/configurationLoader.ts","webpack:///./index.tsx","webpack:///./plumbing/errors/errorCodes.ts","webpack:///./plumbing/errors/errorConsoleReporter.ts","webpack:///./plumbing/errors/errorFormatter.ts","webpack:///./plumbing/errors/errorHandler.ts","webpack:///./plumbing/errors/uiError.ts","webpack:///./plumbing/events/eventEmitter.ts","webpack:///./plumbing/events/eventNames.ts","webpack:///./plumbing/oauth/authenticatorFactory.ts","webpack:///./plumbing/oauth/mobile/mobileAuthenticator.ts","webpack:///./plumbing/oauth/mobile/mobileMethodCaller.ts","webpack:///./plumbing/oauth/web/extended/extendedUserManager.ts","webpack:///./plumbing/oauth/web/extended/extendedWebAuthenticator.ts","webpack:///./plumbing/oauth/web/extended/hybridTokenStorage.ts","webpack:///./plumbing/oauth/web/extended/webReverseProxyClient.ts","webpack:///./plumbing/oauth/web/utilities/customLogoutManager.ts","webpack:///./plumbing/oauth/web/utilities/oidcLogger.ts","webpack:///./plumbing/oauth/web/utilities/tokenRenewalResponseHandler.ts","webpack:///./plumbing/oauth/web/webAuthenticator.ts","webpack:///./plumbing/utilities/axiosUtils.ts","webpack:///./plumbing/utilities/concurrentActionHandler.ts","webpack:///./plumbing/utilities/htmlStorageHelper.ts","webpack:///./plumbing/utilities/sessionManager.ts","webpack:///./plumbing/utilities/urlHelper.ts","webpack:///./plumbing/utilities/userAgentHelper.ts","webpack:///./views/companies/companiesContainer.tsx","webpack:///./views/companies/companiesDesktopView.tsx","webpack:///./views/companies/companiesMobileView.tsx","webpack:///./views/errors/errorBoundary.tsx","webpack:///./views/errors/errorDetailsView.tsx","webpack:///./views/errors/errorSummaryView.tsx","webpack:///./views/headings/headerButtonsView.tsx","webpack:///./views/headings/headingView.tsx","webpack:///./views/headings/sessionView.tsx","webpack:///./views/headings/titleView.tsx","webpack:///./views/loginRequired/loginRequiredView.tsx","webpack:///./views/transactions/transactionsContainer.tsx","webpack:///./views/transactions/transactionsMainView.tsx","webpack:///./views/userInfo/userInfoView.tsx","webpack:///./views/utilities/apiViewEvents.ts","webpack:///./views/utilities/apiViewNames.ts","webpack:///./views/utilities/routeHelper.ts","webpack:///webpack/bootstrap","webpack:///webpack/runtime/compat get default export","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/global","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///webpack/runtime/node module decorator","webpack:///webpack/runtime/jsonp chunk loading","webpack:///webpack/startup"],"names":[],"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W,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IACrG,CAAC;CACJ;;;;;;;UCXD;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;WC/BA;WACA;WACA;WACA;WACA;WACA,gCAAgC,YAAY;WAC5C;WACA,E;;;;;WCPA;WACA;WACA;WACA;WACA,wCAAwC,yCAAyC;WACjF;WACA;WACA,E;;;;;WCPA;WACA;WACA;WACA;WACA,EAAE;WACF;WACA;WACA,CAAC,I;;;;;WCPD,wF;;;;;WCAA;WACA;WACA;WACA,sDAAsD,kBAAkB;WACxE;WACA,+CAA+C,cAAc;WAC7D,E;;;;;WCNA;WACA;WACA;WACA;WACA,E;;;;;WCJA;;WAEA;WACA;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA;WACA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA,MAAM,oBAAoB;WAC1B;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;WAEA;WACA;;WAEA;WACA;WACA;;WAEA;WACA;WACA;;WAEA;WACA;WACA,eAAe,4BAA4B;WAC3C;WACA;WACA,gBAAgB,2BAA2B;WAC3C;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,4CAA4C;WAC5C;WACA,E;;;;;UCpFA;UACA","file":"app.bundle.js","sourcesContent":["var map = {\n\t\"./af\": \"../node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"../node_modules/moment/locale/af.js\",\n\t\"./ar\": \"../node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"../node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"../node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"../node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"../node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"../node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"../node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"../node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"../node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"../node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"../node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"../node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"../node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"../node_modules/moment/locale/ar.js\",\n\t\"./az\": \"../node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"../node_modules/moment/locale/az.js\",\n\t\"./be\": \"../node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"../node_modules/moment/locale/be.js\",\n\t\"./bg\": \"../node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"../node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"../node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"../node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"../node_modules/moment/locale/bn.js\",\n\t\"./bn-bd\": \"../node_modules/moment/locale/bn-bd.js\",\n\t\"./bn-bd.js\": \"../node_modules/moment/locale/bn-bd.js\",\n\t\"./bn.js\": \"../node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"../node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"../node_modules/moment/locale/bo.js\",\n\t\"./br\": \"../node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"../node_modules/moment/locale/br.js\",\n\t\"./bs\": \"../node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"../node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"../node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"../node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"../node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"../node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"../node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"../node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"../node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"../node_modules/moment/locale/cy.js\",\n\t\"./da\": \"../node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"../node_modules/moment/locale/da.js\",\n\t\"./de\": \"../node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"../node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"../node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"../node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"../node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"../node_modules/moment/locale/de.js\",\n\t\"./dv\": \"../node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"../node_modules/moment/locale/dv.js\",\n\t\"./el\": \"../node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"../node_modules/moment/locale/el.js\",\n\t\"./en-au\": \"../node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"../node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"../node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"../node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"../node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"../node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"../node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"../node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"../node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"../node_modules/moment/locale/en-il.js\",\n\t\"./en-in\": \"../node_modules/moment/locale/en-in.js\",\n\t\"./en-in.js\": \"../node_modules/moment/locale/en-in.js\",\n\t\"./en-nz\": \"../node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"../node_modules/moment/locale/en-nz.js\",\n\t\"./en-sg\": \"../node_modules/moment/locale/en-sg.js\",\n\t\"./en-sg.js\": \"../node_modules/moment/locale/en-sg.js\",\n\t\"./eo\": \"../node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"../node_modules/moment/locale/eo.js\",\n\t\"./es\": \"../node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"../node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"../node_modules/moment/locale/es-do.js\",\n\t\"./es-mx\": \"../node_modules/moment/locale/es-mx.js\",\n\t\"./es-mx.js\": \"../node_modules/moment/locale/es-mx.js\",\n\t\"./es-us\": \"../node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"../node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"../node_modules/moment/locale/es.js\",\n\t\"./et\": \"../node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"../node_modules/moment/locale/et.js\",\n\t\"./eu\": \"../node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"../node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"../node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"../node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"../node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"../node_modules/moment/locale/fi.js\",\n\t\"./fil\": \"../node_modules/moment/locale/fil.js\",\n\t\"./fil.js\": \"../node_modules/moment/locale/fil.js\",\n\t\"./fo\": \"../node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"../node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"../node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"../node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"../node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"../node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"../node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"../node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"../node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"../node_modules/moment/locale/fy.js\",\n\t\"./ga\": \"../node_modules/moment/locale/ga.js\",\n\t\"./ga.js\": \"../node_modules/moment/locale/ga.js\",\n\t\"./gd\": \"../node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"../node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"../node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"../node_modules/moment/locale/gl.js\",\n\t\"./gom-deva\": \"../node_modules/moment/locale/gom-deva.js\",\n\t\"./gom-deva.js\": \"../node_modules/moment/locale/gom-deva.js\",\n\t\"./gom-latn\": \"../node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"../node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"../node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"../node_modules/moment/locale/gu.js\",\n\t\"./he\": \"../node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"../node_modules/moment/locale/he.js\",\n\t\"./hi\": \"../node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"../node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"../node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"../node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"../node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"../node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"../node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"../node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"../node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"../node_modules/moment/locale/id.js\",\n\t\"./is\": \"../node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"../node_modules/moment/locale/is.js\",\n\t\"./it\": \"../node_modules/moment/locale/it.js\",\n\t\"./it-ch\": \"../node_modules/moment/locale/it-ch.js\",\n\t\"./it-ch.js\": \"../node_modules/moment/locale/it-ch.js\",\n\t\"./it.js\": \"../node_modules/moment/locale/it.js\",\n\t\"./ja\": \"../node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"../node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"../node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"../node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"../node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"../node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"../node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"../node_modules/moment/locale/kk.js\",\n\t\"./km\": \"../node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"../node_modules/moment/locale/km.js\",\n\t\"./kn\": \"../node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"../node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"../node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"../node_modules/moment/locale/ko.js\",\n\t\"./ku\": \"../node_modules/moment/locale/ku.js\",\n\t\"./ku.js\": \"../node_modules/moment/locale/ku.js\",\n\t\"./ky\": \"../node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"../node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"../node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"../node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"../node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"../node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"../node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"../node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"../node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"../node_modules/moment/locale/lv.js\",\n\t\"./me\": \"../node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"../node_modules/moment/locale/me.js\",\n\t\"./mi\": \"../node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"../node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"../node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"../node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"../node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"../node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"../node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"../node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"../node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"../node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"../node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"../node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"../node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"../node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"../node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"../node_modules/moment/locale/mt.js\",\n\t\"./my\": \"../node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"../node_modules/moment/locale/my.js\",\n\t\"./nb\": \"../node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"../node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"../node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"../node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"../node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"../node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"../node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"../node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"../node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"../node_modules/moment/locale/nn.js\",\n\t\"./oc-lnc\": \"../node_modules/moment/locale/oc-lnc.js\",\n\t\"./oc-lnc.js\": \"../node_modules/moment/locale/oc-lnc.js\",\n\t\"./pa-in\": \"../node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"../node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"../node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"../node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"../node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"../node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"../node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"../node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"../node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"../node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"../node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"../node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"../node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"../node_modules/moment/locale/sd.js\",\n\t\"./se\": \"../node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"../node_modules/moment/locale/se.js\",\n\t\"./si\": \"../node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"../node_modules/moment/locale/si.js\",\n\t\"./sk\": \"../node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"../node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"../node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"../node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"../node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"../node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"../node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"../node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"../node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"../node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"../node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"../node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"../node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"../node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"../node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"../node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"../node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"../node_modules/moment/locale/ta.js\",\n\t\"./te\": \"../node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"../node_modules/moment/locale/te.js\",\n\t\"./tet\": \"../node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"../node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"../node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"../node_modules/moment/locale/tg.js\",\n\t\"./th\": \"../node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"../node_modules/moment/locale/th.js\",\n\t\"./tk\": \"../node_modules/moment/locale/tk.js\",\n\t\"./tk.js\": \"../node_modules/moment/locale/tk.js\",\n\t\"./tl-ph\": \"../node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"../node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"../node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"../node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"../node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"../node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"../node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"../node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"../node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"../node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"../node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"../node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"../node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"../node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"../node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"../node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"../node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"../node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"../node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"../node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"../node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"../node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"../node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"../node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"../node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"../node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"../node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"../node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"../node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"../node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"../node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"../node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-mo\": \"../node_modules/moment/locale/zh-mo.js\",\n\t\"./zh-mo.js\": \"../node_modules/moment/locale/zh-mo.js\",\n\t\"./zh-tw\": \"../node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"../node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"../node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";","import axios, {Method} from 'axios';\r\nimport {Guid} from 'guid-typescript';\r\nimport {ErrorHandler} from '../../plumbing/errors/errorHandler';\r\nimport {Authenticator} from '../../plumbing/oauth/authenticator';\r\nimport {AxiosUtils} from '../../plumbing/utilities/axiosUtils';\r\nimport {SessionManager} from '../../plumbing/utilities/sessionManager';\r\nimport {Company} from '../entities/company';\r\nimport {CompanyTransactions} from '../entities/companyTransactions';\r\nimport {UserInfoClaims} from '../entities/userInfoClaims';\r\nimport {ApiRequestOptions} from './apiRequestOptions';\r\n\r\n/*\r\n * Logic related to making API calls\r\n */\r\nexport class ApiClient {\r\n\r\n    private readonly _apiBaseUrl: string;\r\n    private readonly _authenticator: Authenticator;\r\n    private readonly _sessionId: string;\r\n\r\n    public constructor(apiBaseUrl: string, authenticator: Authenticator) {\r\n\r\n        this._apiBaseUrl = apiBaseUrl;\r\n        if (!this._apiBaseUrl.endsWith('/')) {\r\n            this._apiBaseUrl += '/';\r\n        }\r\n\r\n        this._authenticator = authenticator;\r\n        this._sessionId = SessionManager.get();\r\n    }\r\n\r\n    /*\r\n     * We download user info from the API rather than using the id token\r\n     */\r\n    public async getUserInfo(options?: ApiRequestOptions): Promise<UserInfoClaims> {\r\n\r\n        return await this._callApi('userclaims/current', 'GET', null, options) as UserInfoClaims;\r\n    }\r\n\r\n    /*\r\n     * Get a list of companies\r\n     */\r\n    public async getCompanyList(options?: ApiRequestOptions): Promise<Company[]> {\r\n\r\n        return await this._callApi('companies', 'GET', null, options) as Company[];\r\n    }\r\n\r\n    /*\r\n     * Get a list of transactions for a single company\r\n     */\r\n    public async getCompanyTransactions(id: string, options?: ApiRequestOptions): Promise<CompanyTransactions> {\r\n\r\n        return await this._callApi(`companies/${id}/transactions`, 'GET', null, options) as CompanyTransactions;\r\n    }\r\n\r\n    /*\r\n     * A central method to get data from an API and handle 401 retries\r\n     */\r\n    private async _callApi(\r\n        path: string,\r\n        method: Method,\r\n        dataToSend?: any,\r\n        options?: ApiRequestOptions): Promise<any> {\r\n\r\n        // Get the full path\r\n        const url = `${this._apiBaseUrl}${path}`;\r\n\r\n        // Get the access token, and if it does not exist a login redirect will be triggered\r\n        let token = await this._authenticator.getAccessToken();\r\n\r\n        try {\r\n\r\n            // Call the API\r\n            return await this._callApiWithToken(url, method, dataToSend, token, options);\r\n\r\n        } catch (error1) {\r\n\r\n            // Report Ajax errors if this is not a 401\r\n            if (!this._isApi401Error(error1)) {\r\n                throw ErrorHandler.getFromHttpError(error1, url, 'Web API');\r\n            }\r\n\r\n            // If we received a 401 then try to get a new token\r\n            token = await this._authenticator.refreshAccessToken();\r\n\r\n            // The general pattern for calling an OAuth secured API is to retry 401s once with a new token\r\n            try {\r\n                // Call the API again\r\n                return await this._callApiWithToken(url, method, dataToSend, token, options);\r\n\r\n            } catch (error2) {\r\n\r\n                // Report Ajax errors for the retry\r\n                throw ErrorHandler.getFromHttpError(error2, url, 'Web API');\r\n            }\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Do the work of calling the API\r\n     */\r\n    private async _callApiWithToken(\r\n        url: string,\r\n        method: Method,\r\n        dataToSend: any,\r\n        accessToken: string,\r\n        options?: ApiRequestOptions): Promise<any> {\r\n\r\n        // Force IE11 to bypass the browser cache by changing the request URL every time\r\n        let requestUrl = url;\r\n        if (navigator.userAgent.toLowerCase().indexOf('trident') !== -1) {\r\n            requestUrl += `?time=${new Date().getTime()}`;\r\n        }\r\n\r\n        const response = await axios.request({\r\n            url: requestUrl,\r\n            method,\r\n            data: dataToSend,\r\n            headers: this._getHeaders(accessToken, options),\r\n        });\r\n        AxiosUtils.checkJson(response.data);\r\n        return response.data;\r\n    }\r\n\r\n    /*\r\n     * Add headers for logging and advanced testing purposes\r\n     */\r\n    private _getHeaders(accessToken: any, options?: ApiRequestOptions): any {\r\n\r\n        const headers: any = {\r\n\r\n            // The required authorization header\r\n            'Authorization': `Bearer ${accessToken}`,\r\n\r\n            // Context headers included in API logs\r\n            'x-mycompany-api-client':     'FinalSPA',\r\n            'x-mycompany-session-id':     this._sessionId,\r\n            'x-mycompany-correlation-id': Guid.create().toString(),\r\n        };\r\n\r\n        // A special header can be sent to ask the API to throw a simulated exception\r\n        if (options && options.causeError) {\r\n            headers['x-mycompany-test-exception'] = 'SampleApi';\r\n        }\r\n\r\n        return headers;\r\n    }\r\n\r\n    /*\r\n     * API 401s are handled via a retry with a new token\r\n     */\r\n    private _isApi401Error(error: any) {\r\n\r\n        if (error.response && error.response.status === 401) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n}\r\n","import React from 'react';\r\nimport Modal from 'react-modal';\r\nimport {HashRouter, Route, Switch} from 'react-router-dom';\r\nimport {ApiClient} from '../api/client/apiClient';\r\nimport {Configuration} from '../configuration/configuration';\r\nimport {ConfigurationLoader} from '../configuration/configurationLoader';\r\nimport {ErrorConsoleReporter} from '../plumbing/errors/errorConsoleReporter';\r\nimport {ErrorCodes} from '../plumbing/errors/errorCodes';\r\nimport {ErrorHandler} from '../plumbing/errors/errorHandler';\r\nimport {EventEmitter} from '../plumbing/events/eventEmitter';\r\nimport {EventNames} from '../plumbing/events/eventNames';\r\nimport {Authenticator} from '../plumbing/oauth/authenticator';\r\nimport {AuthenticatorFactory} from '../plumbing/oauth/authenticatorFactory';\r\nimport {CompaniesContainer} from '../views/companies/companiesContainer';\r\nimport {ErrorBoundary} from '../views/errors/errorBoundary';\r\nimport {ErrorSummaryView} from '../views/errors/errorSummaryView';\r\nimport {HeaderButtonsView} from '../views/headings/headerButtonsView';\r\nimport {SessionView} from '../views/headings/sessionView';\r\nimport {TitleView} from '../views/headings/titleView';\r\nimport {LoginRequiredView} from '../views/loginRequired/loginRequiredView';\r\nimport {TransactionsContainer} from '../views/transactions/transactionsContainer';\r\nimport {ApiViewEvents} from '../views/utilities/apiViewEvents';\r\nimport {ApiViewNames} from '../views/utilities/apiViewNames';\r\nimport {RouteHelper} from '../views/utilities/routeHelper';\r\nimport {AppState} from './appState';\r\n\r\n/*\r\n * The application root component\r\n */\r\nexport class App extends React.Component<any, AppState> {\r\n\r\n    private readonly _apiViewEvents: ApiViewEvents;\r\n    private _configuration?: Configuration;\r\n    private _authenticator?: Authenticator;\r\n    private _apiClient?: ApiClient;\r\n\r\n    /*\r\n     * Create safe objects here and do async startup processing later\r\n     */\r\n    public constructor(props: any) {\r\n        super(props);\r\n\r\n        // Set initial state, which will be used on the first render\r\n        this.state = {\r\n            isInitialised: false,\r\n            isInLoggedOutView: false,\r\n            isMainViewLoaded: false,\r\n            isMobileSize: this._isMobileSize(),\r\n            error: null,\r\n        };\r\n\r\n        // Make callbacks available\r\n        this._setupCallbacks();\r\n\r\n        // Create a helper class to notify us about views that make API calls\r\n        // This will enable us to only trigger a login redirect once, after all views have tried to load\r\n        this._apiViewEvents = new ApiViewEvents(this._onLoginRequired, this._onMainViewLoadStateChanged);\r\n        this._apiViewEvents.addView(ApiViewNames.Main);\r\n        this._apiViewEvents.addView(ApiViewNames.UserInfo);\r\n\r\n        // Initialise the modal dialog system used for error popups\r\n        Modal.setAppElement('#root');\r\n    }\r\n\r\n    /*\r\n     * The rendering entry point\r\n     */\r\n    public render(): React.ReactNode {\r\n\r\n        if (!this.state.isInitialised) {\r\n            return this._renderInitialScreen();\r\n        } else {\r\n            return this._renderMain();\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Page startup logic\r\n     */\r\n    public async componentDidMount(): Promise<void> {\r\n        await this._initialiseApp();\r\n    }\r\n\r\n    /*\r\n     * Application startup code\r\n     */\r\n    private async _initialiseApp(): Promise<void> {\r\n\r\n        // Reset state\r\n        this.setState({\r\n            isInitialised: false,\r\n            isInLoggedOutView: false,\r\n            isMainViewLoaded: false,\r\n            isMobileSize: this._isMobileSize(),\r\n            error: null,\r\n        });\r\n\r\n        try {\r\n            // First download configuration from the browser's web domain\r\n            const loader = new ConfigurationLoader();\r\n            this._configuration = await loader.download();\r\n\r\n            // Create the authenticator and receive any login responses on the main window\r\n            this._authenticator = this._createAuthenticator();\r\n            await this._authenticator.initialise();\r\n            await this._authenticator.handleLoginResponse();\r\n\r\n            // Create the API client\r\n            this._apiClient = new ApiClient(this._configuration.app.apiBaseUrl, this._authenticator);\r\n\r\n            // Subscribe to window events\r\n            window.onhashchange = this._onHashChange;\r\n            window.onresize = this._onResize;\r\n\r\n            // Update state\r\n            this.setState({isInitialised: true});\r\n\r\n        } catch (e) {\r\n            this.setState({error: ErrorHandler.getFromException(e)});\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Render basic details before the app has processed its configuration\r\n     */\r\n    private _renderInitialScreen(): React.ReactNode {\r\n\r\n        const titleProps = {\r\n            userInfo: null,\r\n        };\r\n\r\n        const headerButtonProps = {\r\n            sessionButtonsEnabled: this.state.isMainViewLoaded && !this.state.isInLoggedOutView,\r\n            handleHomeClick: this._onHome,\r\n            handleReloadDataClick: this._onReloadData,\r\n            handleExpireAccessTokenClick: this._onExpireAccessToken,\r\n            handleExpireRefreshTokenClick: this._onExpireRefreshToken,\r\n            handleLogoutClick: this._onLogout,\r\n        };\r\n\r\n        const errorProps = {\r\n            hyperlinkMessage: 'Startup Problem Encountered',\r\n            dialogTitle: 'Startup Error',\r\n            error: this.state.error,\r\n            centred: true,\r\n        };\r\n\r\n        return (\r\n            <ErrorBoundary>\r\n                <TitleView {...titleProps} />\r\n                <HeaderButtonsView {...headerButtonProps} />\r\n                <ErrorSummaryView {...errorProps} />\r\n            </ErrorBoundary>\r\n        );\r\n    }\r\n\r\n    /*\r\n     * Attempt to render the entire layout, which will trigger calls to Web APIs\r\n     */\r\n    private _renderMain(): React.ReactNode {\r\n\r\n        const titleProps = {\r\n            userInfo: {\r\n                apiClient: this._apiClient!,\r\n                events: this._apiViewEvents,\r\n                shouldLoad: !this.state.isInLoggedOutView,\r\n            },\r\n        };\r\n\r\n        const headerButtonProps = {\r\n            sessionButtonsEnabled: this.state.isMainViewLoaded && !this.state.isInLoggedOutView,\r\n            handleHomeClick: this._onHome,\r\n            handleExpireAccessTokenClick: this._onExpireAccessToken,\r\n            handleExpireRefreshTokenClick: this._onExpireRefreshToken,\r\n            handleReloadDataClick: this._onReloadData,\r\n            handleLogoutClick: this._onLogout,\r\n        };\r\n\r\n        const errorProps = {\r\n            hyperlinkMessage: 'Problem Encountered',\r\n            dialogTitle: 'Application Error',\r\n            error: this.state.error,\r\n            centred: true,\r\n        };\r\n\r\n        const sessionProps = {\r\n            apiClient: this._apiClient!,\r\n            isVisible: !this.state.isInLoggedOutView,\r\n        };\r\n\r\n        const mainViewProps = {\r\n            onLoading: this._onMainViewLoading,\r\n            apiClient: this._apiClient!,\r\n            events: this._apiViewEvents,\r\n            isMobileSize: this.state.isMobileSize,\r\n        };\r\n\r\n        const loginRequiredProps = {\r\n            onLoading: this._onLoggedOutViewLoading,\r\n        };\r\n\r\n        // Callbacks to prevent multi line JSX warnings\r\n        const renderCompaniesView     = () =>             <CompaniesContainer {...mainViewProps} />;\r\n        const renderTransactionsView  = (props: any) =>   <TransactionsContainer {...props} {...mainViewProps} />;\r\n        const renderLoginRequiredView = () =>             <LoginRequiredView {...loginRequiredProps} />;\r\n\r\n        // Render the tree view\r\n        return (\r\n            <ErrorBoundary>\r\n                <TitleView {...titleProps} />\r\n                <HeaderButtonsView {...headerButtonProps} />\r\n                <ErrorSummaryView {...errorProps} />\r\n                <SessionView {...sessionProps} />\r\n                <HashRouter hashType='noslash'>\r\n                    <Switch>\r\n                        <Route exact={true} path='/'            render={renderCompaniesView} />\r\n                        <Route exact={true} path='/company=:id' render={renderTransactionsView} />\r\n                        <Route exact={true} path='/loggedout'   render={renderLoginRequiredView} />\r\n                        <Route path='*'                         render={renderCompaniesView} />\r\n                    </Switch>\r\n                </HashRouter>\r\n            </ErrorBoundary>\r\n        );\r\n    }\r\n\r\n    /*\r\n     * Create the authenticator object from our configuration, and supply callbacks\r\n     */\r\n    private _createAuthenticator(): Authenticator {\r\n\r\n        return AuthenticatorFactory.createAuthenticator(\r\n            this._configuration!.oauth,\r\n            this._configuration!.app.webBaseUrl,\r\n            this._onMobileWebViewLogin,\r\n            this._onMoveToLoggedOutView);\r\n    }\r\n\r\n    /*\r\n     * Trigger a login redirect when all views have finished calling the API and there has been a login_required error\r\n     */\r\n    private async _onLoginRequired(): Promise<void> {\r\n\r\n        try {\r\n\r\n            // Do the login redirect via the authenticator class\r\n            this.setState({error: null});\r\n            await this._authenticator!.login();\r\n\r\n            // When running in a mobile web view we may still be in the login required view, in which case move home\r\n            if (this.state.isInLoggedOutView) {\r\n                location.hash = '#';\r\n            }\r\n\r\n        } catch (e) {\r\n\r\n            // Treat cancelled logins as a non error, when running in a mobile web view\r\n            const error = ErrorHandler.getFromException(e);\r\n            if (error.errorCode === ErrorCodes.redirectCancelled) {\r\n                location.hash = '#loggedout';\r\n                return;\r\n            }\r\n\r\n            this.setState({error: ErrorHandler.getFromException(e)});\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Called after login completes successfully when running in a mobile web view\r\n     */\r\n    private _onMobileWebViewLogin(): void {\r\n        this._onReloadData(false);\r\n    }\r\n\r\n    /*\r\n     * Update state when the companies or transactions view loads\r\n     */\r\n    private _onMainViewLoading(): void {\r\n        this.setState({isInLoggedOutView: false});\r\n    }\r\n\r\n    /*\r\n     * Update state when the logged out view loads\r\n     */\r\n    private _onLoggedOutViewLoading(): void {\r\n        this.setState({isInLoggedOutView: true});\r\n    }\r\n\r\n    /*\r\n     * Update session buttons when the main view starts and ends loading\r\n     */\r\n    private _onMainViewLoadStateChanged(loaded: boolean): void {\r\n        this.setState({isMainViewLoaded: loaded});\r\n    }\r\n\r\n    /*\r\n     * Handle updates to log levels when the URL log setting is changed\r\n     */\r\n    private _onHashChange(): void {\r\n        this._authenticator!.updateLogLevelIfRequired();\r\n    }\r\n\r\n    /*\r\n     * Ask all views to get updated data from the API\r\n     */\r\n    private _onReloadData(causeError: boolean): void {\r\n\r\n        this._apiViewEvents.clearState();\r\n        EventEmitter.dispatch(EventNames.ON_RELOAD_MAIN, causeError);\r\n        EventEmitter.dispatch(EventNames.ON_RELOAD_USERINFO, causeError);\r\n    }\r\n\r\n    /*\r\n     * Return home and force a reload of data\r\n     */\r\n    private async _onHome(): Promise<void> {\r\n\r\n        // If there is a startup error then reinitialise the app\r\n        if (!this.state.isInitialised) {\r\n            await this._initialiseApp();\r\n        }\r\n\r\n        if (this.state.isInitialised) {\r\n\r\n            if (RouteHelper.isInHomeView()) {\r\n\r\n                // Force a reload of the main view if we are already in the home view\r\n                EventEmitter.dispatch(EventNames.ON_RELOAD_MAIN, false);\r\n\r\n            } else {\r\n\r\n                // Otherwise navigate to the home view\r\n                location.hash = '#';\r\n            }\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Trigger a logout redirect\r\n     */\r\n    private async _onLogout(): Promise<void> {\r\n\r\n        try {\r\n\r\n            // Update state\r\n            this.setState({isMainViewLoaded: false});\r\n\r\n            // Start the logout redirect, which will return to the app in the login required page\r\n            await this._authenticator!.logout();\r\n\r\n        } catch (e) {\r\n\r\n            // Treat cancelled logouts as a non error, when running in a mobile web view\r\n            const error = ErrorHandler.getFromException(e);\r\n            if (error.errorCode !== ErrorCodes.redirectCancelled) {\r\n\r\n                // Otherwise output logout error details only to the console\r\n                ErrorConsoleReporter.output(error);\r\n            }\r\n        } finally {\r\n\r\n            // Ensure that we are in the logged out view in all cases\r\n            this._onMoveToLoggedOutView();\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Called when we move to the logged out view manually, such as when there is a logout error\r\n     * This also occurs when there is a logout on another tab and we receive a check session iframe notification\r\n     */\r\n    private _onMoveToLoggedOutView(): void {\r\n        location.hash = '#loggedout';\r\n    }\r\n\r\n    /*\r\n     * For test purposes this makes the access token act expired\r\n     */\r\n    private async _onExpireAccessToken(): Promise<void> {\r\n        await this._authenticator!.expireAccessToken();\r\n    }\r\n\r\n    /*\r\n     * For test purposes this makes the refresh token act expired\r\n     */\r\n    private async _onExpireRefreshToken(): Promise<void> {\r\n\r\n        try {\r\n\r\n            // Where applicable, make the refresh token act expired\r\n            this.setState({error: null});\r\n            await this._authenticator!.expireRefreshToken();\r\n\r\n        } catch (e) {\r\n\r\n            // Report errors\r\n            this.setState({error: ErrorHandler.getFromException(e)});\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Handle switching between mobile and main view sizes\r\n     */\r\n    private _onResize(): void {\r\n\r\n        if (!this.state.isMobileSize && this._isMobileSize()) {\r\n\r\n            // Handle changing from a large size to mobile size\r\n            this.setState({isMobileSize: true});\r\n\r\n        } else if (this.state.isMobileSize && !this._isMobileSize()) {\r\n\r\n            // Handle changing from a mobile size to large size\r\n            this.setState({isMobileSize: false});\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Indicate whether the current size is that of a mobile device\r\n     */\r\n    private _isMobileSize(): boolean {\r\n        return window.innerWidth < 768;\r\n    }\r\n\r\n    /*\r\n     * Plumbing to ensure that the this parameter is available in callback functions\r\n     */\r\n    private _setupCallbacks(): void {\r\n        this._onMainViewLoading = this._onMainViewLoading.bind(this);\r\n        this._onLoggedOutViewLoading = this._onLoggedOutViewLoading.bind(this);\r\n        this._onMainViewLoadStateChanged = this._onMainViewLoadStateChanged.bind(this);\r\n        this._onHashChange = this._onHashChange.bind(this);\r\n        this._onHome = this._onHome.bind(this);\r\n        this._onLoginRequired = this._onLoginRequired.bind(this);\r\n        this._onReloadData = this._onReloadData.bind(this);\r\n        this._onMobileWebViewLogin = this._onMobileWebViewLogin.bind(this);\r\n        this._onLogout = this._onLogout.bind(this);\r\n        this._onMoveToLoggedOutView = this._onMoveToLoggedOutView.bind(this);\r\n        this._onExpireAccessToken = this._onExpireAccessToken.bind(this);\r\n        this._onExpireRefreshToken = this._onExpireRefreshToken.bind(this);\r\n        this._onResize = this._onResize.bind(this);\r\n    }\r\n}\r\n","import {ConfigurationLoader} from '../configuration/configurationLoader';\r\nimport {ErrorConsoleReporter} from '../plumbing/errors/errorConsoleReporter';\r\nimport {ErrorCodes} from '../plumbing/errors/errorCodes';\r\nimport {ErrorHandler} from '../plumbing/errors/errorHandler';\r\nimport {TokenRenewalResponseHandler} from '../plumbing/oauth/web/utilities/tokenRenewalResponseHandler';\r\n\r\n/*\r\n * A mini application for the hidden iframe that does silent token renewal\r\n */\r\nexport class IFrameApp {\r\n\r\n    public async execute(): Promise<void> {\r\n\r\n        try {\r\n\r\n            // Download configuration\r\n            const configuration = await new ConfigurationLoader().download();\r\n\r\n            // Handle token renewal responses on an iframe\r\n            const handler = new TokenRenewalResponseHandler(configuration.oauth);\r\n            await handler.handleSilentTokenRenewalResponse();\r\n\r\n        } catch (e) {\r\n\r\n            // In the event of errors, avoid impacting end users and output the error to the console\r\n            const uiError = ErrorHandler.getFromTokenError(e, ErrorCodes.tokenRenewalError);\r\n            ErrorConsoleReporter.output(uiError);\r\n        }\r\n    }\r\n}\r\n","import axios from 'axios';\r\nimport {ErrorHandler} from '../plumbing/errors/errorHandler';\r\nimport {AxiosUtils} from '../plumbing/utilities/axiosUtils';\r\nimport {Configuration} from './configuration';\r\n\r\n/*\r\n * A class to download configuration from the server\r\n */\r\nexport class ConfigurationLoader {\r\n\r\n    /*\r\n     * Download JSON data from the app config file\r\n     */\r\n    public async download(): Promise<Configuration> {\r\n\r\n        const fileName = 'spa.config.json';\r\n        try {\r\n\r\n            // Make the remote call\r\n            const response = await axios.get<Configuration>(fileName);\r\n            AxiosUtils.checkJson(response.data);\r\n            return response.data;\r\n\r\n        } catch (xhr) {\r\n\r\n            // Capture error details\r\n            throw ErrorHandler.getFromHttpError(xhr, fileName, 'Web Server');\r\n        }\r\n    }\r\n}\r\n","import React from 'react';\r\nimport {render} from 'react-dom';\r\nimport {App} from './app/app';\r\nimport {IFrameApp} from './app/iframeApp';\r\n\r\n/*\r\n * The application entry point\r\n */\r\nif (window.top === window.self) {\r\n\r\n    // Run the main ReactJS app\r\n    render (\r\n        <App />,\r\n        document.getElementById('root'),\r\n    );\r\n} else {\r\n\r\n    // If our SPA is running on an iframe, handle token renewal responses\r\n    const app = new IFrameApp();\r\n    app.execute();\r\n}\r\n","/*\r\n * Error codes that the UI can program against\r\n */\r\nexport class ErrorCodes {\r\n\r\n    // Used to indicate that the API cannot be called until the user logs in\r\n    // Also returned by OAuth error responses when token renewal via prompt=none fails\r\n    public static readonly loginRequired = 'login_required';\r\n\r\n    // A technical error starting a login request, such as contacting the metadata endpoint\r\n    public static readonly loginRequestFailed = 'login_request_failed';\r\n\r\n    // A technical error processing the login response containing the authorization code\r\n    public static readonly loginResponseFailed = 'login_response_failed';\r\n\r\n    // A technical problem during background token renewal\r\n    public static readonly tokenRenewalError = 'token_renewal_error';\r\n\r\n    // The OAuth error when a refresh token expires\r\n    public static readonly invalidGrant = 'invalid_grant';\r\n\r\n    // An error starting a logout request, such as contacting the metadata endpoint\r\n    public static readonly logoutRequestFailed = 'logout_request_failed';\r\n\r\n    // An error due to no logout standards support\r\n    public static readonly logoutUnsupported = 'logout_unsupported';\r\n\r\n    // An error logging out due to a missing id token on the current tab\r\n    public static readonly missingIdToken = 'missing_id_token';\r\n\r\n    // Used when running in a mobile web view and the AppAuth redirect is cancelled\r\n    public static readonly redirectCancelled = 'redirect_cancelled';\r\n\r\n    // A general exception in the UI\r\n    public static readonly generalUIError = 'ui_error';\r\n\r\n    // An error making an Ajax call\r\n    public static readonly networkError = 'network_error';\r\n\r\n    // An error receiving data as JSON\r\n    public static readonly jsonDataError = 'json_data_error';\r\n\r\n    // An error response fropm the API\r\n    public static readonly responseError = 'http_response_error';\r\n\r\n    // An error rendering a ReactJs view\r\n    public static readonly renderError = 'react_render_error';\r\n\r\n    // Returned by the API when the user edits the browser URL and ties to access an unauthorised company\r\n    public static readonly companyNotFound = 'company_not_found';\r\n\r\n    // Returned by the API when the user edits the browser URL and supplies a non numeric company id\r\n    public static readonly invalidCompanyId = 'invalid_company_id';\r\n}\r\n","import {ErrorFormatter} from './errorFormatter';\r\nimport {UIError} from './uiError';\r\n\r\n/*\r\n * A utility class for errors we don't want to bother the user about\r\n */\r\nexport class ErrorConsoleReporter {\r\n\r\n    /*\r\n     * Output error fields as name / value pairs\r\n     */\r\n    public static output(error: UIError): void {\r\n\r\n        const lines = new ErrorFormatter().getErrorLines(error);\r\n        lines.forEach((l) => {\r\n            console.log(`${l.label}: ${l.value}`);\r\n        });\r\n    }\r\n}\r\n","import moment from 'moment';\r\nimport {ErrorLine} from './errorLine';\r\nimport {UIError} from './uiError';\r\n\r\n/*\r\n * A class to manage error formatting\r\n */\r\nexport class ErrorFormatter {\r\n\r\n    private _count = 0;\r\n\r\n    /*\r\n     * Get errors ready for display\r\n     */\r\n    public getErrorLines(error: UIError): ErrorLine[] {\r\n\r\n        const lines: ErrorLine[] = [];\r\n\r\n        /* FIELDS FOR THE END USER */\r\n\r\n        // Keep the user informed and suggest an action\r\n        lines.push(this._createErrorLine('User Action', error.userAction, 'highlightcolor'));\r\n\r\n        // Give the user summary level info, such as 'Network error'\r\n        if (error.message.length > 0) {\r\n            lines.push(this._createErrorLine('Info', error.message));\r\n        }\r\n\r\n        /* FIELDS FOR TECHNICAL SUPPORT STAFF */\r\n\r\n        // Show the time of the error\r\n        if (error.utcTime.length > 0) {\r\n            const displayTime = moment(error.utcTime).format('DD MMM YYYY HH:mm:ss');\r\n            lines.push(this._createErrorLine('UTC Time', displayTime));\r\n        }\r\n\r\n        // Indicate the area of the system, such as which component failed\r\n        if (error.area.length > 0) {\r\n            lines.push(this._createErrorLine('Area', error.area));\r\n        }\r\n\r\n        // Indicate the type of error\r\n        if (error.errorCode.length > 0) {\r\n            lines.push(this._createErrorLine('Error Code', error.errorCode));\r\n        }\r\n\r\n        // Show the AppAuth error code if applicable, in mobile web scenarios\r\n        if (error.appAuthCode.length > 0) {\r\n            lines.push(this._createErrorLine('AppAuth Code', error.appAuthCode.toString()));\r\n        }\r\n\r\n        // Link to API logs if applicable\r\n        if (error.instanceId > 0) {\r\n            lines.push(this._createErrorLine('Instance Id', error.instanceId.toString(), 'errorcolor'));\r\n        }\r\n\r\n        // Show the HTTP status if applicable\r\n        if (error.statusCode > 0) {\r\n            lines.push(this._createErrorLine('Status Code', error.statusCode.toString()));\r\n        }\r\n\r\n        /* FIELDS FOR DEVELOPERS */\r\n\r\n        // Show details for some types of error\r\n        if (error.details.length > 0) {\r\n            lines.push(this._createErrorLine('Details', error.details));\r\n        }\r\n\r\n        // Show the URL that failed if applicable\r\n        if (error.url.length > 0) {\r\n            lines.push(this._createErrorLine('URL', error.url));\r\n        }\r\n\r\n        return lines;\r\n    }\r\n\r\n    /*\r\n     * Return the stack separately, since it is rendered in smaller text\r\n     */\r\n    public getErrorStack(error: UIError): ErrorLine | null {\r\n\r\n        // In debug builds render the stack trace as a long string\r\n        // We can then look up results at https://sourcemaps.info\r\n        if (SHOW_STACK_TRACE) {\r\n            if (error.stack) {\r\n                return this._createErrorLine('Stack', error.stack);\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Return an error line as an object\r\n     */\r\n    private _createErrorLine(label: string, value: string, valueStyle = 'valuecolor'): ErrorLine {\r\n\r\n        return {\r\n            id: ++this._count,\r\n            label,\r\n            value,\r\n            valueStyle,\r\n        };\r\n    }\r\n}\r\n","import {ErrorCodes} from './errorCodes';\r\nimport {UIError} from './uiError';\r\n\r\n/*\r\n * A class to handle error processing\r\n */\r\nexport class ErrorHandler {\r\n\r\n    /*\r\n     * Return an error based on the exception type or properties\r\n     */\r\n    public static getFromException(exception: any): UIError {\r\n\r\n        // Already handled errors\r\n        if (exception instanceof UIError) {\r\n            return exception;\r\n        }\r\n\r\n        // Create the error\r\n        const error = new UIError(\r\n            'Web UI',\r\n            ErrorCodes.generalUIError,\r\n            'A technical problem was encountered in the UI',\r\n            exception.stack);\r\n\r\n        // Set technical details from the received exception\r\n        error.details = ErrorHandler._getExceptionMessage(exception);\r\n        return error;\r\n    }\r\n\r\n    /*\r\n     * A login required error is thrown to short circuit execution when the UI cannot get an access token\r\n     */\r\n    public static getFromLoginRequired(): UIError {\r\n\r\n        return new UIError(\r\n            'Login',\r\n            ErrorCodes.loginRequired,\r\n            'No access token is available and a login is required');\r\n    }\r\n\r\n    /*\r\n     * Handle errors signing in\r\n     */\r\n    public static getFromLoginOperation(exception: any, errorCode: string): UIError {\r\n\r\n        // Already handled errors\r\n        if (exception instanceof UIError) {\r\n            return exception;\r\n        }\r\n\r\n        // Create the error\r\n        const error = new UIError(\r\n            'Login',\r\n            errorCode,\r\n            'A technical problem occurred during login processing',\r\n            exception.stack);\r\n\r\n        // Set technical details from the received exception\r\n        error.details = ErrorHandler._getOAuthExceptionMessage(exception);\r\n        return error;\r\n    }\r\n\r\n    /*\r\n     * Handle errors interacting with the token endpoint\r\n     */\r\n    public static getFromTokenError(exception: any, errorCode: string): UIError {\r\n\r\n        // Already handled errors\r\n        if (exception instanceof UIError) {\r\n            return exception;\r\n        }\r\n\r\n        // Create the error\r\n        const error = new UIError(\r\n            'Token',\r\n            errorCode,\r\n            'A technical problem occurred during token processing',\r\n            exception.stack);\r\n\r\n        // Set technical details from the received exception\r\n        error.details = ErrorHandler._getOAuthExceptionMessage(exception);\r\n        return error;\r\n    }\r\n\r\n    /*\r\n     * Handle sign out request errors\r\n     */\r\n    public static getFromLogoutOperation(exception: any, errorCode: string): UIError {\r\n\r\n        // Already handled errors\r\n        if (exception instanceof UIError) {\r\n            return exception;\r\n        }\r\n\r\n        // Create the error\r\n        const error = new UIError(\r\n            'Logout',\r\n            errorCode,\r\n            'A technical problem occurred during logout processing',\r\n            exception.stack);\r\n\r\n        // Set technical details from the received exception\r\n        error.details = ErrorHandler._getOAuthExceptionMessage(exception);\r\n        return error;\r\n    }\r\n\r\n    /*\r\n     * Indicate if we don't know how to logout\r\n     */\r\n    public static getFromLogoutUnsupported(): UIError {\r\n\r\n        return new UIError(\r\n            'Logout',\r\n            ErrorCodes.logoutUnsupported,\r\n            'Logout is not supported by this provider, due to a missing end session endpoint');\r\n    }\r\n\r\n    /*\r\n     * Indicate if the id token is missing during a logout attempt\r\n     */\r\n    public static getFromMissingIdToken(): UIError {\r\n\r\n        return new UIError(\r\n            'Logout',\r\n            ErrorCodes.missingIdToken,\r\n            'Unable to logout because no id token exists for this browser tab');\r\n    }\r\n\r\n    /*\r\n     * Return an object for Ajax errors\r\n     */\r\n    public static getFromJsonParseError(): UIError {\r\n\r\n        return new UIError(\r\n            'Data',\r\n            ErrorCodes.jsonDataError,\r\n            'HTTP response data was not valid JSON and could not be parsed');\r\n    }\r\n\r\n    /*\r\n     * Return an object for Ajax errors\r\n     */\r\n    public static getFromHttpError(exception: any, url: string, source: string): UIError {\r\n\r\n        // Already handled errors\r\n        if (exception instanceof UIError) {\r\n            return exception;\r\n        }\r\n\r\n        // Calculate the status code\r\n        let statusCode = 0;\r\n        if (exception.response && exception.response.status) {\r\n            statusCode = exception.response.status;\r\n        }\r\n\r\n        let error = null;\r\n        if (statusCode === 0) {\r\n\r\n            // This status is generally a CORS or availability problem\r\n            error = new UIError(\r\n                'Network',\r\n                ErrorCodes.networkError,\r\n                `A network problem occurred when the UI called the ${source}`,\r\n                exception.stack);\r\n            error.details = this._getExceptionMessage(exception);\r\n\r\n        } else if (statusCode >= 200 && statusCode <= 299) {\r\n\r\n            // This status is generally a JSON parsing error\r\n            error = new UIError(\r\n                'JSON',\r\n                ErrorCodes.jsonDataError,\r\n                `'A technical problem occurred parsing data from the ${source}`,\r\n                exception.stack);\r\n            error.details = this._getExceptionMessage(exception);\r\n\r\n        } else {\r\n\r\n            // Create an error indicating a data problem\r\n            error = new UIError(\r\n                source,\r\n                ErrorCodes.responseError,\r\n                `An error response was returned from the ${source}`,\r\n                exception.stack);\r\n            error.details = this._getExceptionMessage(exception);\r\n\r\n            // Override the default with a server response when received and CORS allows us to read it\r\n            if (exception.response && exception.response.data && typeof exception.response.data === 'object') {\r\n                ErrorHandler._updateFromApiErrorResponse(error, exception.response.data);\r\n            }\r\n        }\r\n\r\n        error.statusCode = statusCode;\r\n        error.url = url;\r\n        return error;\r\n    }\r\n\r\n    /*\r\n     * Return an error due to rendering the view\r\n     */\r\n    public static getFromRenderError(exception: any, componentStack?: string): UIError {\r\n\r\n        // Already handled errors\r\n        if (exception instanceof UIError) {\r\n            return exception;\r\n        }\r\n\r\n        // Create the error\r\n        const error = new UIError(\r\n            'Web UI',\r\n            ErrorCodes.renderError,\r\n            'A technical problem was encountered rendering the UI',\r\n            exception.stack);\r\n\r\n        // Set technical details from the received exception\r\n        error.details = ErrorHandler._getExceptionMessage(exception);\r\n        if (componentStack) {\r\n            error.details += ` : ${componentStack}`;\r\n        }\r\n\r\n        return error;\r\n    }\r\n\r\n    /*\r\n     * Try to update the default API error with response details\r\n     */\r\n    private static _updateFromApiErrorResponse(error: UIError, apiError: any): void {\r\n\r\n        // Attempt to read the API error response\r\n        if (apiError) {\r\n\r\n            // Set the code and message, returned for both 4xx and 5xx errors\r\n            if (apiError.code && apiError.message) {\r\n                error.errorCode = apiError.code;\r\n                error.details = apiError.message;\r\n            }\r\n\r\n            // Set extra details returned for 5xx errors\r\n            if (apiError.area && apiError.id && apiError.utcTime) {\r\n                error.setApiErrorDetails(apiError.area, apiError.id, apiError.utcTime);\r\n            }\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the message from an OAuth exception\r\n     */\r\n    private static _getOAuthExceptionMessage(exception: any): string {\r\n\r\n        let oauthError = '';\r\n        if (exception.error) {\r\n            oauthError = exception.error;\r\n            if (exception.error_description) {\r\n                oauthError += ` : ${(exception.error_description.replace(/\\+/g, ' '))}`;\r\n            }\r\n        }\r\n\r\n        if (oauthError) {\r\n            return oauthError;\r\n        } else {\r\n            return ErrorHandler._getExceptionMessage(exception);\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the message from an exception and avoid returning [object Object]\r\n     */\r\n    private static _getExceptionMessage(exception: any): string {\r\n\r\n        if (exception.message) {\r\n            return exception.message;\r\n        }\r\n\r\n        const details = exception.toString();\r\n        if (details !== {}.toString()) {\r\n            return details;\r\n        }\r\n\r\n        return '';\r\n    }\r\n}\r\n","/*\r\n * An error entity containing translated error data for any kind of error\r\n */\r\nexport class UIError extends Error {\r\n\r\n    private _area: string;\r\n    private _errorCode: string;\r\n    private _userAction: string;\r\n    private _utcTime: string;\r\n    private _statusCode: number;\r\n    private _instanceId: number;\r\n    private _appAuthCode: string;\r\n    private _details: any;\r\n    private _url: string;\r\n\r\n    /*\r\n     * All types of error supply at least these fields\r\n     */\r\n    public constructor(area: string, errorCode: string, userMessage: string, stack?: string | undefined) {\r\n\r\n        super(userMessage);\r\n\r\n        this._area = area;\r\n        this._errorCode = errorCode;\r\n        this._userAction = 'Please retry the operation';\r\n        this._utcTime = new Date().toISOString();\r\n        this._statusCode = 0;\r\n        this._instanceId = 0;\r\n        this._appAuthCode = '';\r\n        this._details = '';\r\n        this._url = '';\r\n\r\n        // Ensure that instanceof works\r\n        Object.setPrototypeOf(this, new.target.prototype);\r\n\r\n        // Store the stack of the original exception if provided\r\n        if (stack) {\r\n            this.stack = stack;\r\n        }\r\n    }\r\n\r\n    public get area(): string {\r\n        return this._area;\r\n    }\r\n\r\n    public get errorCode(): string {\r\n        return this._errorCode;\r\n    }\r\n\r\n    public set errorCode(value: string) {\r\n        this._errorCode = value;\r\n    }\r\n\r\n    public get userAction(): string {\r\n        return this._userAction;\r\n    }\r\n\r\n    public set userAction(value: string) {\r\n        this._userAction = value;\r\n    }\r\n\r\n    public get utcTime(): string {\r\n        return this._utcTime;\r\n    }\r\n\r\n    public get statusCode(): number {\r\n        return this._statusCode;\r\n    }\r\n\r\n    public set statusCode(value: number) {\r\n        this._statusCode = value;\r\n    }\r\n\r\n    public get instanceId(): number {\r\n        return this._instanceId;\r\n    }\r\n\r\n    public get appAuthCode(): string {\r\n        return this._appAuthCode;\r\n    }\r\n\r\n    public set appAuthCode(value: string) {\r\n        this._appAuthCode = value;\r\n    }\r\n\r\n    public get details(): any {\r\n        return this._details;\r\n    }\r\n\r\n    public set details(value: any)  {\r\n        this._details = value;\r\n    }\r\n\r\n    public get url(): string {\r\n        return this._url;\r\n    }\r\n\r\n    public set url(value: string) {\r\n        this._url = value;\r\n    }\r\n\r\n    /*\r\n     * Override details when an API 500 error is handled\r\n     */\r\n    public setApiErrorDetails(area: string, id: number, utcTime: string): void {\r\n        this._area = area;\r\n        this._instanceId = id;\r\n        this._utcTime = utcTime;\r\n    }\r\n}\r\n","import {EventItem} from './eventItem';\r\n\r\n/*\r\n * A simple event emitter class\r\n */\r\nexport class EventEmitter {\r\n\r\n    /*\r\n     * Subscribe to a named event\r\n     */\r\n    public static subscribe(name: string, callback: (data: any) => void): void {\r\n\r\n        let item = EventEmitter._events.find((e) => e.name === name);\r\n        if (!item) {\r\n\r\n            item = {\r\n                name,\r\n                callbacks: [],\r\n            };\r\n            EventEmitter._events.push(item);\r\n        }\r\n\r\n        item.callbacks.push(callback);\r\n    }\r\n\r\n    /*\r\n     * Unsubscribe and remove storage\r\n     */\r\n    public static unsubscribe(name: string, callback: (data: any) => void): void {\r\n\r\n        const item = EventEmitter._events.find((e) => e.name === name);\r\n        if (item) {\r\n            item.callbacks = item.callbacks.filter((c) => c !== callback);\r\n            if (item.callbacks.length === 0) {\r\n                EventEmitter._events = EventEmitter._events.filter((e) => e.name !== name);\r\n            }\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Dispatch named event messages\r\n     */\r\n    public static dispatch(name: string, data: any): void {\r\n\r\n        const item = EventEmitter._events.find((e) => e.name === name);\r\n        if (item) {\r\n            item.callbacks.forEach((callback) => callback(data));\r\n        }\r\n    }\r\n\r\n    private static _events: EventItem[] = [];\r\n}\r\n","/*\r\n * Constants for event names\r\n */\r\nexport class EventNames {\r\n\r\n    // An event to reload the main view\r\n    public static readonly ON_RELOAD_MAIN = 'reload_main';\r\n\r\n    // An event to reload the user info view\r\n    public static readonly ON_RELOAD_USERINFO = 'reload_userinfo';\r\n}\r\n","import {InMemoryWebStorage, WebStorageStateStore} from 'oidc-client';\r\nimport {OAuthConfiguration} from '../../configuration/oauthConfiguration';\r\nimport {UrlHelper} from '../utilities/urlHelper';\r\nimport {UserAgentHelper} from '../utilities/userAgentHelper';\r\nimport {Authenticator} from './authenticator';\r\nimport {MobileAuthenticator} from './mobile/mobileAuthenticator';\r\nimport {ExtendedWebAuthenticator} from './web/extended/extendedWebAuthenticator';\r\nimport {WebAuthenticator} from './web/webAuthenticator';\r\nimport {WebAuthenticatorOptions} from './web/webAuthenticatorOptions';\r\n\r\n/*\r\n * Create the authenticator based on configuration\r\n */\r\nexport class AuthenticatorFactory {\r\n\r\n    /*\r\n     * Return different authenticator strategies depending on the configuration and runtime conditions\r\n     */\r\n    public static createAuthenticator(\r\n        configuration: OAuthConfiguration,\r\n        webBaseUrl: string,\r\n        onLoggedIn: () => void,\r\n        onLoggedOut: () => void): Authenticator {\r\n\r\n        if (UserAgentHelper.isAndroidWebView() || UserAgentHelper.isIosWebView()) {\r\n\r\n            // When running in a web view we create an authenticator that calls back the mobile app\r\n            return new MobileAuthenticator(onLoggedIn);\r\n\r\n        } else {\r\n\r\n            const options = AuthenticatorFactory._createWebAuthenticatorOptions(\r\n                configuration,\r\n                webBaseUrl,\r\n                onLoggedOut);\r\n\r\n            if (!configuration.reverseProxyPath) {\r\n\r\n                // Use standard SPA security by default\r\n                return new WebAuthenticator(options);\r\n\r\n            } else {\r\n\r\n                // Use an extended authenticator when proxying requests containing refresh tokens\r\n                return new ExtendedWebAuthenticator(options);\r\n            }\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Create the base settings for a web authenticator\r\n     */\r\n    private static _createWebAuthenticatorOptions(\r\n        configuration: OAuthConfiguration,\r\n        webBaseUrl: string,\r\n        onLoggedOut: () => void): WebAuthenticatorOptions {\r\n\r\n        return {\r\n\r\n            configuration,\r\n            webBaseUrl,\r\n            onLoggedOut,\r\n            settings: {\r\n\r\n                // The Open Id Connect base URL\r\n                authority: configuration.authority,\r\n\r\n                // Core OAuth settings for our app\r\n                client_id: configuration.clientId,\r\n                redirect_uri: UrlHelper.append(webBaseUrl, configuration.redirectUri),\r\n                scope: configuration.scope,\r\n\r\n                // Use the Authorization Code Flow (PKCE)\r\n                response_type: 'code',\r\n\r\n                // By default, store tokens only in memory\r\n                userStore: new WebStorageStateStore({ store: new InMemoryWebStorage() }),\r\n\r\n                // Renew on the app's main URL and do so explicitly rather than via a background timer\r\n                silent_redirect_uri: UrlHelper.append(webBaseUrl, configuration.redirectUri),\r\n                automaticSilentRenew: false,\r\n\r\n                // Our Web UI gets user info from its API\r\n                loadUserInfo: false,\r\n\r\n                // Indicate the logout return path and listen for logout events from other browser tabs\r\n                post_logout_redirect_uri: UrlHelper.append(webBaseUrl, configuration.postLogoutRedirectUri),\r\n                monitorSession: true,\r\n            },\r\n        };\r\n    }\r\n}\r\n","import {Guid} from 'guid-typescript';\r\nimport {Authenticator} from '../authenticator';\r\nimport {MobileMethodCaller} from './mobileMethodCaller';\r\n\r\n/*\r\n * An implementation that calls back the hosting mobile app\r\n */\r\nexport class MobileAuthenticator implements Authenticator {\r\n\r\n    private _methodCaller: MobileMethodCaller;\r\n    private _onLoggedInAction: () => void;\r\n\r\n    public constructor(_onLoggedInAction: () => void) {\r\n        this._methodCaller = new MobileMethodCaller();\r\n        this._onLoggedInAction = _onLoggedInAction;\r\n    }\r\n\r\n    /*\r\n     * This is a no op in the mobile case\r\n     */\r\n    public async initialise(): Promise<void> {\r\n    }\r\n\r\n    /*\r\n     * Ask the mobile app for the current access token\r\n     */\r\n    public async getAccessToken(): Promise<string> {\r\n        return this._methodCaller.callAsync('getAccessToken', Guid.create().toString());\r\n    }\r\n\r\n    /*\r\n     * Ask the mobile app to use its refresh token to get a new access token\r\n     */\r\n    public async refreshAccessToken(): Promise<string> {\r\n        return this._methodCaller.callAsync('refreshAccessToken', Guid.create().toString());\r\n    }\r\n\r\n    /*\r\n     * Do the login operation, which does not involve redirecting the whole page\r\n     */\r\n    public async login(): Promise<void> {\r\n\r\n        // Do the login work in the mobile app\r\n        await this._methodCaller.callAsync('login');\r\n\r\n        // Run other post login actions\r\n        this._onLoggedInAction();\r\n    }\r\n\r\n    /*\r\n     * The method to handle a login response on page load is is a no op when running in a web view\r\n     */\r\n    public async handleLoginResponse(): Promise<void> {\r\n    }\r\n\r\n    /*\r\n     * Initiate a logout redirect, which does not involve redirecting the whole page\r\n     */\r\n    public async logout(): Promise<void> {\r\n        await this._methodCaller.callAsync('logout');\r\n    }\r\n\r\n    /*\r\n     * For testing, make the access token act like it is expired\r\n     */\r\n    public async expireAccessToken(): Promise<void> {\r\n        await this._methodCaller.callAsync('expireAccessToken');\r\n    }\r\n\r\n    /*\r\n     * For testing, make the refresh token act like it is expired\r\n     */\r\n    public async expireRefreshToken(): Promise<void> {\r\n        await this._methodCaller.callAsync('expireRefreshToken');\r\n    }\r\n\r\n    /*\r\n     * There is no built in logging for the mobile case\r\n     */\r\n    public updateLogLevelIfRequired(): void {\r\n    }\r\n}\r\n","import {UIError} from '../../errors/uiError';\r\n\r\n/*\r\n * A utility class to deal with calling mobile methods, async completion and error responses\r\n */\r\nexport class MobileMethodCaller {\r\n\r\n    private _isAndroid: boolean;\r\n\r\n    public constructor() {\r\n        this._isAndroid = navigator.userAgent.toLowerCase().indexOf('android') !== -1;\r\n    }\r\n\r\n    /*\r\n     * An interface to call the mobile app and wait for a deferred result\r\n     */\r\n    public async callAsync(methodName: string, guid?: string): Promise<string> {\r\n\r\n        return new Promise<string>((resolve, reject) => {\r\n\r\n            // Get a callback name for this mobile method call\r\n            const callbackName = this._getCallbackName(methodName, guid);\r\n            const customWindow = window as any;\r\n\r\n            // First define callback behaviour\r\n            const callback = (data: string, errorJson: string) => {\r\n\r\n                // First remove the callback\r\n                delete customWindow[callbackName];\r\n\r\n                if (errorJson) {\r\n\r\n                    // Handle errors if required\r\n                    reject(this._parseMobileError(errorJson));\r\n\r\n                } else {\r\n\r\n                    // Otherwise return a success result\r\n                    resolve(data);\r\n                }\r\n            };\r\n\r\n            // Call the mobile method to do the work\r\n            customWindow[callbackName] = callback;\r\n            this._callMethod(customWindow, methodName, callbackName);\r\n        });\r\n    }\r\n\r\n    /*\r\n     * The callback name includes a GUID for concurrent operations\r\n     */\r\n    private _getCallbackName(methodName: string, guid?: string) {\r\n\r\n        if (guid) {\r\n            return `callback_${methodName}_${guid}`;\r\n        } else {\r\n            return `callback_${methodName}`;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Handle differences between Android and iOS interop\r\n     */\r\n    private _callMethod(customWindow: any, methodName: string, callbackName: string) {\r\n\r\n        if (this._isAndroid) {\r\n\r\n            // For Android we call a method on a mobile object\r\n            customWindow.mobileBridge[methodName](callbackName);\r\n\r\n        } else {\r\n\r\n            // For iOS we post a message to a message handler custom object\r\n            const request = {\r\n                methodName,\r\n                callbackName,\r\n            };\r\n            customWindow.webkit.messageHandlers.mobileBridge.postMessage(JSON.stringify(request));\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Parse JSON from the mobile app to our own UI error object\r\n     */\r\n    private _parseMobileError(errorJson: string): UIError {\r\n\r\n        const obj = JSON.parse(errorJson);\r\n        const error = new UIError(obj.area, obj.errorCode, obj.userMessage);\r\n\r\n        if (obj.appAuthCode) {\r\n            error.appAuthCode = obj.appAuthCode;\r\n        }\r\n\r\n        // These strings are received as base 64 text to deal with characters that need escaping\r\n        if (obj.details) {\r\n            error.details = atob(obj.details);\r\n        }\r\n        if (obj.stack) {\r\n            error.stack = atob(obj.stack);\r\n        }\r\n\r\n        return error;\r\n    }\r\n}\r\n","import {SigninResponse, StateStore, User, UserManager, UserManagerSettings} from 'oidc-client';\r\n\r\n/*\r\n * Extend the OIDC User Manager class to deal with proxying refresh token related requests\r\n * This keeps long lived credentials out of the browser and also resolves usability problems\r\n */\r\nexport class ExtendedUserManager extends UserManager {\r\n\r\n    private readonly _onSignInResponse: (response: any) => void;\r\n\r\n    public constructor(settings: UserManagerSettings, onSignInResponse: (response: any) => void) {\r\n        super(settings);\r\n        this._onSignInResponse = onSignInResponse;\r\n    }\r\n\r\n    /*\r\n     * Override the base method to capture a CSRF token from the authorization code grant response\r\n     */\r\n    public async processSigninResponse(url?: string, stateStore?: StateStore): Promise<SigninResponse> {\r\n\r\n        const response = await super.processSigninResponse(url, stateStore) as any;\r\n        this._onSignInResponse(response);\r\n        return response;\r\n    }\r\n\r\n    /*\r\n     * Override the base method to force a send of refresh token grant messages\r\n     */\r\n    public async signinSilent(args?: any): Promise<User> {\r\n\r\n        // The stored user needs a refresh token, which is why we set this dummy value\r\n        await this._setStoredRefreshToken('-');\r\n\r\n        // The silent renewal is now guaranteed to never be an iframe renewal request\r\n        const user = await super.signinSilent(args);\r\n\r\n        // Undo the temporary value set above\r\n        await this._setStoredRefreshToken('');\r\n\r\n        // Return the updated user, with new tokens stored in memory\r\n        return user;\r\n    }\r\n\r\n    /*\r\n     * Temporarily change the stored refresh token value to get the behaviour we want\r\n     */\r\n    private async _setStoredRefreshToken(value: string): Promise<void> {\r\n\r\n        const user = await this.getUser();\r\n        if (user) {\r\n            user.refresh_token = value;\r\n            await this.storeUser(user);\r\n        }\r\n    }\r\n}\r\n","import {UserManager, UserManagerSettings, WebStorageStateStore} from 'oidc-client';\r\nimport {WebAuthenticator} from '../webAuthenticator';\r\nimport {WebAuthenticatorOptions} from '../webAuthenticatorOptions';\r\nimport {ExtendedUserManager} from './extendedUserManager';\r\nimport {HybridTokenStorage} from './hybridTokenStorage';\r\nimport {WebReverseProxyClient} from './webReverseProxyClient';\r\n\r\n/*\r\n * Extends the standard authenticator to handle refresh tokens stored in encrypted HTTP only cookies\r\n */\r\nexport class ExtendedWebAuthenticator extends WebAuthenticator {\r\n\r\n    private _extendedUserManager?: ExtendedUserManager;\r\n    private readonly _webReverseProxyClient: WebReverseProxyClient;\r\n\r\n    public constructor(options: WebAuthenticatorOptions) {\r\n\r\n        super(options);\r\n\r\n        // Use a custom option to store OIDC state, but not tokens, in local storage\r\n        // This is needed to make the library send token refresh grant messages for new browser tabs\r\n        (this._options.settings as any).userStore = new WebStorageStateStore({ store: new HybridTokenStorage() });\r\n\r\n        // Create an object to manage calls vui the web reverse proxy endpoint\r\n        this._webReverseProxyClient = new WebReverseProxyClient(\r\n            this._options.configuration.clientId,\r\n            this._options.webBaseUrl,\r\n            this._options.configuration.reverseProxyPath);\r\n\r\n        this._setupDerivedCallbacks();\r\n    }\r\n\r\n    /*\r\n     * Override the base class to make the refresh token in the HTTP only cookie act expired\r\n     */\r\n    public async expireRefreshToken(): Promise<void> {\r\n\r\n        await super.expireAccessToken();\r\n        await this._webReverseProxyClient.expireRefreshToken();\r\n    }\r\n\r\n    /*\r\n     * Create a custom user manager used to subclass certain OAuth events\r\n     */\r\n    protected _createUserManager(settings: UserManagerSettings): UserManager {\r\n\r\n        this._extendedUserManager = new ExtendedUserManager(settings, this._onSignInResponse);\r\n        return this._extendedUserManager;\r\n    }\r\n\r\n    /*\r\n     * Updates needed to proxy refresh tokens in an HTTP only cookie, along with a CSRF field\r\n     */\r\n    protected async _onInitialise(): Promise<void> {\r\n\r\n        // Update the metadata's token endpoint field to point to that of the web reverse proxy\r\n        // Note that metadata is stored against the settings object and the MetadataService is not properly overridable\r\n        const settings = this._extendedUserManager!.settings;\r\n        await this._extendedUserManager!.metadataService.getMetadata();\r\n        settings.metadata!.token_endpoint = this._webReverseProxyClient.getTokenEndpoint();\r\n\r\n        // Initialise the web reverse proxy, so that it sends a CSRF field later\r\n        this._webReverseProxyClient.initialise();\r\n    }\r\n\r\n    /*\r\n     * Handle the response of the authorization code grant message\r\n     */\r\n    private _onSignInResponse(response: any): void {\r\n        this._webReverseProxyClient.storeCsrfFieldFromProxy(response);\r\n    }\r\n\r\n    /*\r\n     * When a user session ends, ensure that the refresh token cookie is removed\r\n     */\r\n    protected async _onSessionExpiring(): Promise<void> {\r\n        await this._webReverseProxyClient.clearRefreshToken();\r\n    }\r\n\r\n    /*\r\n     * Plumbing to ensure that the this parameter is available in async callbacks\r\n     */\r\n    private _setupDerivedCallbacks(): void {\r\n        this._onSignInResponse = this._onSignInResponse.bind(this);\r\n    }\r\n}","/*\r\n * A hybrid token storage class that saves tokens only in memory in private class members\r\n * This makes user state available in new browser tabs so that ExtendedUserManager token refresh works\r\n */\r\nexport class HybridTokenStorage {\r\n\r\n    private _accessToken: string;\r\n    private _refreshToken: string;\r\n    private _idToken: string;\r\n\r\n    public constructor() {\r\n        this._accessToken = '';\r\n        this._refreshToken = '';\r\n        this._idToken = '';\r\n    }\r\n\r\n    /*\r\n     * Customise token storage after login, so that sensitive data is only in memory\r\n     */\r\n    public setItem(key: string, value: any): any {\r\n\r\n        // Store the real tokens in memory\r\n        const deserialized = JSON.parse(value);\r\n        this._removeSensitiveDataWhenStoring(deserialized);\r\n\r\n        // Save protocol claims to local storage, needed to support page refreshes and multi tab browsing\r\n        localStorage.setItem(key, JSON.stringify(deserialized));\r\n    }\r\n\r\n    /*\r\n     * When UserManager.getUser is called, this supplies tokens from memory\r\n     */\r\n    public getItem(key: string): any {\r\n\r\n        // Load protocol claims from local storage\r\n        const rawData = localStorage.getItem(key);\r\n        if (rawData) {\r\n\r\n            // Update with in memory token values\r\n            const deserialized = JSON.parse(rawData);\r\n            this._setSensitiveDataWhenLoading(deserialized);\r\n            return JSON.stringify(deserialized);\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Override the removeItem method to also clear tokens\r\n     */\r\n    public removeItem(key: string): any {\r\n\r\n        localStorage.removeItem(key);\r\n        this._accessToken = '';\r\n        this._refreshToken = '';\r\n        this._idToken = '';\r\n    }\r\n\r\n    /*\r\n     * Return the length property\r\n     */\r\n    public get length(): number {\r\n        return localStorage.length;\r\n    }\r\n\r\n    /*\r\n     * Forward to the indexer property\r\n     */\r\n    public key(index: number): string | null {\r\n        return localStorage[index];\r\n    }\r\n\r\n    /*\r\n     * Return the id token for use during logout\r\n     */\r\n    public getIdToken(): string {\r\n        return this._idToken;\r\n    }\r\n\r\n    /*\r\n     * Avoid storing tokens in local storage\r\n     */\r\n    private _removeSensitiveDataWhenStoring(tokenData: any) {\r\n\r\n        // Save the updated access token\r\n        this._accessToken = tokenData.access_token;\r\n\r\n        // If there is a new refresh token then save it, otherwise maintain the existing one\r\n        if (tokenData.refresh_token) {\r\n            this._refreshToken = tokenData.refresh_token;\r\n        }\r\n\r\n        // If there is a new id token then save it, otherwise maintain the existing one\r\n        if (tokenData.id_token) {\r\n            this._idToken = tokenData.id_token;\r\n        }\r\n\r\n        // Remove tokens from HTML storage\r\n        delete tokenData.access_token;\r\n        delete tokenData.id_token;\r\n        delete tokenData.refresh_token;\r\n\r\n        if (tokenData.profile) {\r\n\r\n            // Also remove profile claims from the id token, since our SPA gets this data from our API\r\n            delete tokenData.profile.given_name;\r\n            delete tokenData.profile.family_name;\r\n            delete tokenData.profile.email;\r\n\r\n            // Some providers also supply this value\r\n            if (tokenData.profile.preferred_username) {\r\n                delete tokenData.profile.preferred_username;\r\n            }\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Return our in memory tokens to the OIDC Client library\r\n     */\r\n    private _setSensitiveDataWhenLoading(tokenData: any) {\r\n\r\n        tokenData.access_token = this._accessToken;\r\n        tokenData.id_token = this._idToken;\r\n        tokenData.refresh_token = this._refreshToken;\r\n    }\r\n}\r\n","import axios, {AxiosRequestConfig, Method} from 'axios';\r\nimport {ErrorHandler} from '../../../errors/errorHandler';\r\nimport {ErrorConsoleReporter} from '../../../errors/errorConsoleReporter';\r\nimport {HtmlStorageHelper} from '../../../utilities/htmlStorageHelper';\r\nimport {UrlHelper} from '../../../utilities/urlHelper';\r\n\r\n/*\r\n * A helper class to deal with the web reverse proxy, its auth cookie, and its CSRF field\r\n */\r\nexport class WebReverseProxyClient {\r\n\r\n    private readonly _clientId: string;\r\n    private readonly _reverseProxyBaseUrl: string;\r\n    private readonly _responseBodyFieldName = 'csrf_field';\r\n    private readonly _requestHeaderFieldName = 'x-mycompany-finalspa-refresh-csrf';\r\n\r\n    public constructor(clientId: string, webBaseUrl: string, reverseProxyPath: string) {\r\n        this._clientId = clientId;\r\n        this._reverseProxyBaseUrl = UrlHelper.append(webBaseUrl, reverseProxyPath);\r\n    }\r\n\r\n    /*\r\n     * Override the prototype to send a CSRF request header\r\n     * This accompanies the auth cookie issued by the web reverse proxy\r\n     */\r\n    public initialise(): void {\r\n\r\n        // Only do this once\r\n        if (Object.isFrozen(XMLHttpRequest.prototype)) {\r\n            return;\r\n        }\r\n\r\n        /* eslint-disable @typescript-eslint/no-this-alias */\r\n        const that = this;\r\n        const orig = XMLHttpRequest.prototype.open as any;\r\n        XMLHttpRequest.prototype.open = function (method: string, url: string) {\r\n            orig.call(this, method, url);\r\n            that._sendCsrfFieldToProxy(this, url);\r\n        };\r\n\r\n        // Freeze the prototype so that malicious code is unable to intercept the bearer header\r\n        Object.freeze(XMLHttpRequest.prototype);\r\n    }\r\n\r\n    /*\r\n     * Return the location of the token endpoint\r\n     */\r\n    public getTokenEndpoint(): string {\r\n        return UrlHelper.append(this._reverseProxyBaseUrl, 'token');\r\n    }\r\n\r\n    /*\r\n     * Store the CSRF field when the web reverse proxy returns it in the Authorization Code Grant response\r\n     */\r\n    public storeCsrfFieldFromProxy(response: any): void {\r\n\r\n        if (response[this._responseBodyFieldName]) {\r\n            HtmlStorageHelper.tokenEndpointCookieCsrfField = response[this._responseBodyFieldName];\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Clean up web reverse proxy resources when the user session ends\r\n     */\r\n    public async clearRefreshToken(): Promise<void> {\r\n\r\n        // Send a delete request to the reverse proxy's token endpoint to clear HTTP only cookies\r\n        await this._sendWebReverseProxyRequest('DELETE', 'token');\r\n\r\n        // Also remove the CSRF field from local storage\r\n        HtmlStorageHelper.removeTokenEndpointCookieCsrfField();\r\n    }\r\n\r\n    /*\r\n     * Call the server and ask it to rewrite the refresh token in the auth cookie, to make it act expired\r\n     */\r\n    public async expireRefreshToken(): Promise<void> {\r\n        await this._sendWebReverseProxyRequest('POST', 'expire');\r\n    }\r\n\r\n    /*\r\n     * Do the common work when sending a request to the web reverse proxy\r\n     */\r\n    private async _sendWebReverseProxyRequest(method: Method, operationPath: string): Promise<void> {\r\n\r\n        const url = UrlHelper.append(this._reverseProxyBaseUrl, operationPath);\r\n        try {\r\n\r\n            // Use form URL encoded data\r\n            const formData = new URLSearchParams();\r\n            formData.append('client_id', this._clientId);\r\n\r\n            // Define request options\r\n            const options = {\r\n                url,\r\n                method,\r\n                data: formData,\r\n                headers: {\r\n                    'content-type': 'application/x-www-form-urlencoded',\r\n                },\r\n            };\r\n\r\n            // Call the web reverse proxy\r\n            await axios.request(options as AxiosRequestConfig);\r\n\r\n        } catch (e) {\r\n\r\n            // Only output errors for this operation to the console\r\n            const error = ErrorHandler.getFromHttpError(e, url, 'reverse_proxy_request');\r\n            ErrorConsoleReporter.output(error);\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Add a CSRF field to make it harder for attackers to send the web reverse proxy's auth cookie\r\n     */\r\n    private _sendCsrfFieldToProxy(request: XMLHttpRequest, url: string) {\r\n\r\n        if (url.toLowerCase().startsWith(this._reverseProxyBaseUrl)) {\r\n\r\n            const value = HtmlStorageHelper.tokenEndpointCookieCsrfField;\r\n            if (value) {\r\n                request.setRequestHeader(this._requestHeaderFieldName, value);\r\n            }\r\n        }\r\n    }\r\n}\r\n","import {OAuthConfiguration} from '../../../../configuration/oauthConfiguration';\r\nimport {ErrorHandler} from '../../../errors/errorHandler';\r\nimport {UrlHelper} from '../../../utilities/urlHelper';\r\n\r\n/*\r\n * A class to manage logout via a vendor specific URL\r\n */\r\nexport class CustomLogoutManager {\r\n\r\n    private readonly _webBaseUrl: string;\r\n    private readonly _configuration: OAuthConfiguration;\r\n\r\n    public constructor(webBaseUrl: string, configuration: OAuthConfiguration) {\r\n        this._webBaseUrl = webBaseUrl;\r\n        this._configuration = configuration;\r\n    }\r\n\r\n    /*\r\n     * Format the Cognito specific logout URL\r\n     */\r\n    public getCustomLogoutUrl(): string {\r\n\r\n        // We currently only support this provider\r\n        if (this._configuration.authority.indexOf('cognito') === -1) {\r\n            throw ErrorHandler.getFromLogoutUnsupported();\r\n        }\r\n\r\n        // Form the full logout redirect URI\r\n        const clientId = encodeURIComponent(this._configuration.clientId);\r\n        const logoutPath = UrlHelper.append(this._webBaseUrl, this._configuration.postLogoutRedirectUri);\r\n        const postLogoutReturnUri = encodeURIComponent(logoutPath);\r\n\r\n        // Upon return, loggedout.html redirects to https://web.authsamples.com/spa#loggedout\r\n        return `${this._configuration.customLogoutEndpoint}?client_id=${clientId}&logout_uri=${postLogoutReturnUri}`;\r\n    }\r\n}","import {Log} from 'oidc-client';\r\nimport urlparse from 'url-parse';\r\nimport {HtmlStorageHelper} from '../../../utilities/htmlStorageHelper';\r\n\r\n/*\r\n * A helper class to deal with calculating and storing the log level\r\n */\r\nexport class OidcLogger {\r\n\r\n    /*\r\n     * Set the initial log details\r\n     */\r\n    public constructor() {\r\n\r\n        Log.logger = console;\r\n\r\n        let level = this._getUrlLogLevel();\r\n        if (!level) {\r\n            level = this._getStoredLogLevel();\r\n        }\r\n\r\n        this._setLogLevel(level);\r\n    }\r\n\r\n    /*\r\n     * If the URL has been updated such as to #log=debug, then update the OIDC Client logging level\r\n     */\r\n    public updateLogLevelIfRequired(): void {\r\n\r\n        const newLevel = this._getUrlLogLevel();\r\n        if (newLevel && newLevel !== this._getStoredLogLevel()) {\r\n            this._setLogLevel(newLevel);\r\n            HtmlStorageHelper.oidcLogLevel = newLevel;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the log level from a query parameter in the hash URL, such as #companies=2&log=info\r\n     */\r\n    private _getUrlLogLevel(): string {\r\n\r\n        if (location.hash.startsWith('#')) {\r\n\r\n            const hashFragment = location.hash.substring(1).replace(/^\\//, '');\r\n            if (hashFragment) {\r\n                const data = urlparse('?' + hashFragment, true);\r\n                const logLevel = data.query.log;\r\n                if (logLevel) {\r\n                    return logLevel.toLowerCase();\r\n                }\r\n            }\r\n        }\r\n\r\n        return '';\r\n    }\r\n\r\n    /*\r\n     * Get the value from session storage if it exists\r\n     */\r\n    private _getStoredLogLevel(): string {\r\n        return HtmlStorageHelper.oidcLogLevel;\r\n    }\r\n\r\n    /*\r\n     * Update the log level\r\n     */\r\n    private _setLogLevel(level: string): void {\r\n\r\n        const data: { [key: string]: number | undefined } = {\r\n            none:  Log.NONE,\r\n            error: Log.ERROR,\r\n            warn:  Log.WARN,\r\n            info:  Log.INFO,\r\n            debug: Log.DEBUG,\r\n        };\r\n\r\n        const levelToSet = level || 'none';\r\n        const numericLevel = data[levelToSet];\r\n        if (numericLevel !== undefined) {\r\n            Log.level = numericLevel;\r\n        }\r\n    }\r\n}\r\n","import {UserManager} from 'oidc-client';\r\nimport urlparse from 'url-parse';\r\nimport {OAuthConfiguration} from '../../../../configuration/oauthConfiguration';\r\n\r\n/*\r\n * Receive iframe token renewal responses\r\n */\r\nexport class TokenRenewalResponseHandler {\r\n\r\n    private readonly _userManager: UserManager;\r\n\r\n    public constructor(configuration: OAuthConfiguration) {\r\n\r\n        const settings = {\r\n            authority: configuration.authority,\r\n            client_id: configuration.clientId,\r\n        };\r\n\r\n        this._userManager = new UserManager(settings);\r\n    }\r\n\r\n    /*\r\n     * Handle token renewal responses from the authorization server\r\n     */\r\n    public async handleSilentTokenRenewalResponse(): Promise<void> {\r\n\r\n        // If the page loads with a state query parameter we classify it as an OAuth response\r\n        const urlData = urlparse(location.href, true);\r\n        if (urlData.query && urlData.query.state) {\r\n\r\n            // Start processing of the authorization response on the iframe\r\n            // Any errors are reported via the authenticator class of the main window\r\n            await this._userManager.signinSilentCallback();\r\n        }\r\n    }\r\n}\r\n","import {UserManager, UserManagerSettings} from 'oidc-client';\r\nimport urlparse from 'url-parse';\r\nimport {ErrorCodes} from '../../errors/errorCodes';\r\nimport {ErrorHandler} from '../../errors/errorHandler';\r\nimport {ConcurrentActionHandler} from '../../utilities/concurrentActionHandler';\r\nimport {HtmlStorageHelper} from '../../utilities/htmlStorageHelper';\r\nimport {Authenticator} from '../authenticator';\r\nimport {CustomLogoutManager} from './utilities/customLogoutManager';\r\nimport {OidcLogger} from './utilities/oidcLogger';\r\nimport {WebAuthenticatorOptions} from './webAuthenticatorOptions';\r\n\r\n/*\r\n * A web authenticator with standard behaviour that can be extended via a subclass\r\n */\r\nexport class WebAuthenticator implements Authenticator {\r\n\r\n    private readonly _oidcLogger: OidcLogger;\r\n    private readonly _concurrencyHandler: ConcurrentActionHandler;\r\n    protected _options: WebAuthenticatorOptions;\r\n    private _userManager?: UserManager;\r\n\r\n    public constructor(options: WebAuthenticatorOptions) {\r\n\r\n        this._options = options;\r\n        this._oidcLogger = new OidcLogger();\r\n        this._concurrencyHandler = new ConcurrentActionHandler();\r\n        this._setupCallbacks();\r\n    }\r\n\r\n    /*\r\n     * Create the user manager during initialisation\r\n     */\r\n    public async initialise(): Promise<void> {\r\n\r\n        // First create the user manager from settings\r\n        this._userManager = this._createUserManager(this._options.settings);\r\n\r\n        // When the user signs out from another browser tab, also remove tokens from this browser tab\r\n        // This will only work if the Authorization Server has a check_session_iframe endpoint\r\n        this._userManager.events.addUserSignedOut(async () => {\r\n            this._userManager!.removeUser();\r\n            this._options.onLoggedOut();\r\n        });\r\n\r\n        // Allow any derived classes to do extra work\r\n        await this._onInitialise();\r\n    }\r\n\r\n    /*\r\n     * Get an access token if possible, which will retrieve it from storage\r\n     */\r\n    public async getAccessToken(): Promise<string> {\r\n\r\n        // Get tokens from OIDC client\r\n        const user = await this._userManager!.getUser();\r\n        if (user && user.access_token) {\r\n            return user.access_token;\r\n        }\r\n\r\n        // Try to refresh the access token otherwise\r\n        return await this.refreshAccessToken();\r\n    }\r\n\r\n    /*\r\n     * Try to refresh an access token in a synchronised manner across multiple views\r\n     */\r\n    public async refreshAccessToken(): Promise<string> {\r\n\r\n        // See if the user is stored on any browser tab\r\n        let user = await this._userManager!.getUser();\r\n        if (user) {\r\n\r\n            // The concurrency handler will only do the refresh work for the first UI view that requests it\r\n            await this._concurrencyHandler.execute(this._performTokenRefresh);\r\n\r\n            // Return the renewed access token if possible\r\n            user = await this._userManager!.getUser();\r\n            if (user && user.access_token) {\r\n                return user.access_token;\r\n            }\r\n        }\r\n\r\n        // Trigger a login redirect if there are no unexpected errors but we cannot refresh\r\n        throw ErrorHandler.getFromLoginRequired();\r\n    }\r\n\r\n    /*\r\n     * Trigger the login redirect\r\n     */\r\n    public async login(): Promise<void> {\r\n\r\n        try {\r\n\r\n            // Get the identity provider to use or default to unknown\r\n            const idp = this._getRuntimeIdentityProvider();\r\n            const extraQueryParams: any = {};\r\n            if (idp) {\r\n                extraQueryParams[this._options.configuration.idpParameterName] = idp;\r\n            }\r\n\r\n            // Store data during the redirect\r\n            const data = {\r\n                hash: location.hash,\r\n                idp,\r\n            };\r\n\r\n            // Start the login redirect\r\n            await this._userManager!.signinRedirect({\r\n                state: data,\r\n                extraQueryParams,\r\n            });\r\n\r\n        } catch (e) {\r\n\r\n            // Handle OAuth specific errors, such as those calling the metadata endpoint\r\n            throw ErrorHandler.getFromLoginOperation(e, ErrorCodes.loginRequestFailed);\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Handle login responses on the main window\r\n     */\r\n    public async handleLoginResponse(): Promise<void> {\r\n\r\n        // If the page loads with a state query parameter we classify it as an OAuth response\r\n        const urlData = urlparse(location.href, true);\r\n        if (urlData.query && urlData.query.state) {\r\n\r\n            let redirectLocation = '#';\r\n            try {\r\n\r\n                // Only try to process a login response if the state exists\r\n                const storedState = await this._userManager!.settings.stateStore?.get(urlData.query.state);\r\n                if (storedState) {\r\n\r\n                    // Process the login response and send the authorization code grant message\r\n                    const user = await this._userManager!.signinRedirectCallback();\r\n\r\n                    // If an identity provider query parameter was set, save it after a successful login\r\n                    if (user.state.idp) {\r\n                        HtmlStorageHelper.identityProvider = user.state.idp;\r\n                    }\r\n\r\n                    // We will redirect to the hash URL before the login redirect\r\n                    redirectLocation = user.state.hash;\r\n\r\n                    // Delete any local storage redirect state older than 5 minutes for incomplete login redirects\r\n                    await this._userManager!.clearStaleState();\r\n                }\r\n\r\n            } catch (e) {\r\n\r\n                // Handle and rethrow OAuth response errors\r\n                throw ErrorHandler.getFromLoginOperation(e, ErrorCodes.loginResponseFailed);\r\n\r\n            } finally {\r\n\r\n                // Always replace the browser location, to remove OAuth details from back navigation\r\n                history.replaceState({}, document.title, redirectLocation);\r\n            }\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Do the logout redirect\r\n     */\r\n    public async logout(): Promise<void> {\r\n\r\n        try {\r\n\r\n            // Allow derived classes to perform clean up\r\n            await this._onSessionExpiring();\r\n\r\n            // See if the provider supports standards based logout\r\n            const endSessionEndpoint = await this._userManager!.metadataService.getEndSessionEndpoint();\r\n            if (endSessionEndpoint) {\r\n\r\n                // With some providers, during multi tab browsing we may not have an id token on the current tab\r\n                const user = await this._userManager?.getUser();\r\n                if (!user || !user.id_token) {\r\n                    await this._userManager!.removeUser();\r\n                    throw ErrorHandler.getFromMissingIdToken();\r\n                }\r\n\r\n                // Clean up state then invoke the standard behaviour\r\n                await this._userManager!.signoutRedirect();\r\n\r\n            } else {\r\n\r\n                // Remove tokens from memory\r\n                await this._userManager?.removeUser();\r\n\r\n                // Then format the vendor specific URL and do the redirect\r\n                const logoutManager = new CustomLogoutManager(this._options.webBaseUrl, this._options.configuration);\r\n                const fullLogoutUrl = logoutManager.getCustomLogoutUrl();\r\n                location.replace(fullLogoutUrl);\r\n            }\r\n\r\n        } catch (e) {\r\n\r\n            // Handle any technical errors\r\n            throw ErrorHandler.getFromLogoutOperation(e, ErrorCodes.logoutRequestFailed);\r\n        }\r\n    }\r\n\r\n    /*\r\n     * This method is for testing only, to make the access token in storage act like it has expired\r\n     */\r\n    public async expireAccessToken(): Promise<void> {\r\n\r\n        const user = await this._userManager!.getUser();\r\n        if (user) {\r\n\r\n            user.access_token = 'x' + user.access_token + 'x';\r\n            this._userManager!.storeUser(user);\r\n        }\r\n    }\r\n\r\n    /*\r\n     * For testing, make the refresh token act like it is expired, when applicable\r\n     */\r\n    public async expireRefreshToken(): Promise<void> {\r\n\r\n        // First expire the access token so that the next API call returns a 401\r\n        await this.expireAccessToken();\r\n\r\n        // Expire the refresh token if we have one\r\n        const user = await this._userManager!.getUser();\r\n        if (user && user.refresh_token) {\r\n            user.refresh_token = 'x' + user.refresh_token + 'x';\r\n            this._userManager!.storeUser(user);\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Manage updates based on the user typing in a hash fragment URL such as #log=debug\r\n     */\r\n    public updateLogLevelIfRequired(): void {\r\n        this._oidcLogger.updateLogLevelIfRequired();\r\n    }\r\n\r\n    /*\r\n     * The default implementation of creating the user manager can be overridden by derived classes\r\n     */\r\n    protected _createUserManager(settings: UserManagerSettings): UserManager {\r\n        return new UserManager(settings);\r\n    }\r\n\r\n    /*\r\n     * Can be overridden by derived classes to do further initialisation\r\n     */\r\n    protected async _onInitialise(): Promise<void> {\r\n    }\r\n\r\n    /*\r\n     * Can be overridden by derived classes to do further work when a session expires\r\n     */\r\n    protected async _onSessionExpiring(): Promise<void> {\r\n    }\r\n\r\n    /*\r\n     * Ask OIDC client to silently renew the access token\r\n     */\r\n    private async _performTokenRefresh(): Promise<void> {\r\n\r\n        try {\r\n\r\n            // OIDC Client will either send a refresh token grant message or use a hidden iframe\r\n            await this._userManager!.signinSilent();\r\n\r\n        } catch (e) {\r\n\r\n            if (this._isSessionExpired(e)) {\r\n\r\n                // Remove token data, which will result in triggering a login redirect later\r\n                await this._userManager!.removeUser();\r\n\r\n                // Inform derived classes where applicable\r\n                await this._onSessionExpiring();\r\n\r\n            } else {\r\n\r\n                // Rethrow other errors\r\n                throw ErrorHandler.getFromTokenError(e, ErrorCodes.tokenRenewalError);\r\n            }\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Handle the idp query parameter when redirecting\r\n     */\r\n    private _getRuntimeIdentityProvider(): string {\r\n\r\n        // Use idp= to remove the identity provider from storage\r\n        const urlData = urlparse(location.href, true);\r\n        if (urlData.query && urlData.query.idp === '') {\r\n            HtmlStorageHelper.removeIdentityProvider();\r\n            return '';\r\n        }\r\n\r\n        // Use a value such as idp=Okta to select an identity provider\r\n        if (urlData.query && urlData.query.idp) {\r\n            return urlData.query.idp;\r\n        }\r\n\r\n        // Use a local storage value if it exists\r\n        return HtmlStorageHelper.identityProvider;\r\n    }\r\n\r\n    /*\r\n     * Treat certain errors as session expired\r\n     */\r\n    private _isSessionExpired(e: any): boolean {\r\n\r\n        // An invalid_grant error code from the Authorization Server means an expired refresh token\r\n        if (e.message === ErrorCodes.invalidGrant) {\r\n            return true;\r\n        }\r\n\r\n        // A login_required error code means iframe silent renewal has failed\r\n        if (e.error === ErrorCodes.loginRequired) {\r\n            return true;\r\n        }\r\n\r\n        // This can happen when providers are not standards based, in which case we treat it as an invalid_grant\r\n        // https://github.com/IdentityModel/oidc-client-js/issues/1058\r\n        if (e.message === 'auth_time in id_token does not match original auth_time') {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /*\r\n     * Plumbing to ensure that the this parameter is available in async callbacks\r\n     */\r\n    private _setupCallbacks(): void {\r\n        this._performTokenRefresh = this._performTokenRefresh.bind(this);\r\n    }\r\n}\r\n","import {ErrorHandler} from '../../plumbing/errors/errorHandler';\r\n\r\n/*\r\n * Utilities related to the Axios library\r\n */\r\nexport class AxiosUtils {\r\n\r\n    /*\r\n     * Axios has a known issue where it swallows parse errors, so we throw an error in the way Axios should\r\n     * https://github.com/axios/axios/issues/61\r\n     */\r\n    public static checkJson(data: any): void {\r\n\r\n        if (typeof data !== 'object') {\r\n            const error: any = ErrorHandler.getFromJsonParseError();\r\n            error.response = {\r\n                status: 200,\r\n            };\r\n            throw error;\r\n        }\r\n    }\r\n}\r\n","// Internal types\r\ntype SuccessCallback = () => void;\r\ntype ErrorCallback = (error: any) => void;\r\n\r\n/*\r\n * Used when multiple React UI fragments attempt an action that needs to be performed only once\r\n * Javascript is single threaded so we do not need to lock as in other languages\r\n */\r\nexport class ConcurrentActionHandler {\r\n\r\n    private _callbacks: [SuccessCallback, ErrorCallback][];\r\n\r\n    public constructor() {\r\n        this._callbacks = [];\r\n    }\r\n\r\n    /*\r\n     * Run the supplied action once and return a promise while in progress\r\n     */\r\n    public async execute(action: () => Promise<void>): Promise<void> {\r\n\r\n        // Create a promise through which to return the result\r\n        const promise = new Promise<any>((resolve, reject) => {\r\n\r\n            const onSuccess = () => {\r\n                resolve(null);\r\n            };\r\n\r\n            const onError = (error: any) => {\r\n                reject(error);\r\n            };\r\n\r\n            this._callbacks.push([onSuccess, onError]);\r\n        });\r\n\r\n        // Only do the work for the first UI view that calls us\r\n        const performAction = this._callbacks.length === 1;\r\n        if (performAction) {\r\n\r\n            try {\r\n\r\n                // Do the work\r\n                await action();\r\n\r\n                // On success resolve all promises\r\n                this._callbacks.forEach((c) => {\r\n                    c[0]();\r\n                });\r\n\r\n            } catch (e) {\r\n\r\n                // On failure resolve all promises with the same error\r\n                this._callbacks.forEach((c) => {\r\n                    c[1](e);\r\n                });\r\n            }\r\n\r\n            // Reset once complete\r\n            this._callbacks = [];\r\n        }\r\n\r\n        // Return the promise\r\n        return promise;\r\n    }\r\n}\r\n","/*\r\n * A utility class to keep our HTML storage organised\r\n */\r\nexport class HtmlStorageHelper {\r\n\r\n    private static _prefix = 'finalspa.'\r\n    private static _isLoggedInField = 'loggedin';\r\n    private static _cookieCsrfField = 'cookie-csrf-field';\r\n    private static _identityProvider = 'identity-provider';\r\n    private static _apiSessionKeyName = 'api-sessionid';\r\n    private static _oidcLogLevelKeyName = 'oidc-log-level';\r\n\r\n    /*\r\n     * Return a CSRF field used for refresh token grant requests to the reverse proxy token endpoint\r\n     */\r\n    public static get tokenEndpointCookieCsrfField(): string {\r\n\r\n        const key = `${HtmlStorageHelper._prefix}${HtmlStorageHelper._cookieCsrfField}`;\r\n        return localStorage.getItem(key) || '';\r\n    }\r\n\r\n    /*\r\n     * Set the CSRF field used with the refresh token cookie\r\n     */\r\n    public static set tokenEndpointCookieCsrfField(value: string) {\r\n\r\n        const key = `${HtmlStorageHelper._prefix}${HtmlStorageHelper._cookieCsrfField}`;\r\n        localStorage.setItem(key, value);\r\n    }\r\n\r\n    /*\r\n     * Remove the CSRF field\r\n     */\r\n    public static removeTokenEndpointCookieCsrfField(): void {\r\n\r\n        const key = `${HtmlStorageHelper._prefix}${HtmlStorageHelper._cookieCsrfField}`;\r\n        localStorage.removeItem(key);\r\n    }\r\n\r\n    /*\r\n     * Return the preferred identity provider for the user\r\n     */\r\n    public static get identityProvider(): string {\r\n\r\n        const key = `${HtmlStorageHelper._prefix}${HtmlStorageHelper._identityProvider}`;\r\n        return localStorage.getItem(key) || '';\r\n    }\r\n\r\n    /*\r\n     * Record a federated login value supplied in a query parameter such as idp\r\n     */\r\n    public static set identityProvider(value: string) {\r\n\r\n        const key = `${HtmlStorageHelper._prefix}${HtmlStorageHelper._identityProvider}`;\r\n        localStorage.setItem(key, value);\r\n    }\r\n\r\n    /*\r\n     * Remove a federated login value\r\n     */\r\n    public static removeIdentityProvider(): void {\r\n\r\n        const key = `${HtmlStorageHelper._prefix}${HtmlStorageHelper._identityProvider}`;\r\n        localStorage.removeItem(key);\r\n    }\r\n\r\n    /*\r\n     * Get the session id for API requests from this browser tab\r\n     */\r\n    public static get apiSessionId(): string {\r\n\r\n        const key = `${HtmlStorageHelper._prefix}${HtmlStorageHelper._apiSessionKeyName}`;\r\n        return sessionStorage.getItem(key) || '';\r\n    }\r\n\r\n    /*\r\n     * Record a session id to be sent to the API for requests from this browser tab\r\n     */\r\n    public static set apiSessionId(value: string) {\r\n\r\n        const key = `${HtmlStorageHelper._prefix}${HtmlStorageHelper._apiSessionKeyName}`;\r\n        sessionStorage.setItem(key, value);\r\n    }\r\n\r\n    /*\r\n     * Get the log level for viewing OIDC client library details\r\n     */\r\n    public static get oidcLogLevel(): string {\r\n\r\n        const key = `${HtmlStorageHelper._prefix}${HtmlStorageHelper._oidcLogLevelKeyName}`;\r\n        return localStorage.getItem(key) || '';\r\n    }\r\n\r\n    /*\r\n     * Record the log level for viewing OIDC client library details\r\n     */\r\n    public static set oidcLogLevel(value: string) {\r\n\r\n        const key = `${HtmlStorageHelper._prefix}${HtmlStorageHelper._oidcLogLevelKeyName}`;\r\n        localStorage.setItem(key, value);\r\n    }\r\n}\r\n","import {Guid} from 'guid-typescript';\r\nimport {HtmlStorageHelper} from './htmlStorageHelper';\r\n\r\n/*\r\n * A custom session id header is added on each API call that is included in API logs\r\n */\r\nexport class SessionManager {\r\n\r\n    /*\r\n     * Create the session when the browser tab is first created\r\n     */\r\n    public static get(): string {\r\n\r\n        let sessionId = HtmlStorageHelper.apiSessionId;\r\n        if (!sessionId) {\r\n\r\n            sessionId = Guid.create().toString();\r\n            HtmlStorageHelper.apiSessionId = sessionId;\r\n        }\r\n\r\n        return sessionId;\r\n    }\r\n}\r\n","/*\r\n * A utility class to append URLs\r\n */\r\nexport class UrlHelper {\r\n\r\n    /*\r\n     * In AWS we use a trailing / in the redirect URI, to prevent an unwanted redirect from /spa?code=xxx to /spa/\r\n     */\r\n    public static append(baseUrl: string, path: string): string {\r\n\r\n        if (!baseUrl.endsWith('/') && !path.startsWith('/')) {\r\n            return `${baseUrl}/${path}`;\r\n        }\r\n\r\n        return `${baseUrl}${path}`;\r\n\r\n    }\r\n}\r\n","/*\r\n * A helper class to work with the user agent\r\n */\r\nexport class UserAgentHelper {\r\n\r\n    /*\r\n     * Look for Android and wv\r\n     */\r\n    public static isAndroidWebView(): boolean {\r\n\r\n        const pattern = 'Android.*(wv|.0.0.0)';\r\n        const regex = new RegExp(pattern);\r\n        return !!navigator.userAgent.match(regex);\r\n    }\r\n\r\n    /*\r\n     * Look for an iOS related string without Safari or Firefox\r\n     * Note that up to date iPad web views use 'Macintosh' rather than 'iPad'\r\n     */\r\n    public static isIosWebView(): boolean {\r\n\r\n        const pattern = '(iPhone|iPod|iPad|Macintosh)(?!.*Safari)(?!.*Firefox)';\r\n        const regex = new RegExp(pattern);\r\n        return !!navigator.userAgent.match(regex);\r\n    }\r\n}\r\n","import React from 'react';\r\nimport {ErrorCodes} from '../../plumbing/errors/errorCodes';\r\nimport {ErrorHandler} from '../../plumbing/errors/errorHandler';\r\nimport {EventEmitter} from '../../plumbing/events/eventEmitter';\r\nimport {EventNames} from '../../plumbing/events/eventNames';\r\nimport {ErrorSummaryView} from '../errors/errorSummaryView';\r\nimport {ApiViewNames} from '../utilities/apiViewNames';\r\nimport {CompaniesContainerProps} from './companiesContainerProps';\r\nimport {CompaniesContainerState} from './companiesContainerState';\r\nimport {CompaniesDesktopView} from './companiesDesktopView';\r\nimport {CompaniesMobileView} from './companiesMobileView';\r\n\r\n/*\r\n * Render the companies view to replace the existing view\r\n */\r\nexport class CompaniesContainer extends React.Component<CompaniesContainerProps, CompaniesContainerState> {\r\n\r\n    public constructor(props: CompaniesContainerProps) {\r\n\r\n        super(props);\r\n        props.onLoading();\r\n\r\n        this.state = {\r\n            companies: [],\r\n            error: null,\r\n        };\r\n\r\n        this._setupCallbacks();\r\n    }\r\n\r\n    /*\r\n     * Render according to the current state and the type of device\r\n     */\r\n    public render(): React.ReactNode {\r\n\r\n        // Render an error on failure\r\n        if (this.state.error) {\r\n            return this._renderError();\r\n        }\r\n\r\n        // Display nothing until there is data\r\n        if (this.state.companies.length === 0) {\r\n            return (\r\n                <>\r\n                </>\r\n            );\r\n        }\r\n\r\n        // Display the desktop or mobile view otherwise\r\n        const props = {\r\n            companies: this.state.companies,\r\n        };\r\n\r\n        if (this.props.isMobileSize) {\r\n            return  (\r\n                <CompaniesMobileView {...props}/>\r\n            );\r\n        }\r\n\r\n        return  (\r\n            <CompaniesDesktopView {...props}/>\r\n        );\r\n    }\r\n\r\n    /*\r\n     * Load data then listen for the reload event\r\n     */\r\n    public async componentDidMount(): Promise<void> {\r\n\r\n        EventEmitter.subscribe(EventNames.ON_RELOAD_MAIN, this._loadData);\r\n        await this._loadData(false);\r\n    }\r\n\r\n    /*\r\n     * Unsubscribe when we unload\r\n     */\r\n    public async componentWillUnmount(): Promise<void> {\r\n\r\n        EventEmitter.unsubscribe(EventNames.ON_RELOAD_MAIN, this._loadData);\r\n    }\r\n\r\n    /*\r\n     * Get data from the API and update state\r\n     */\r\n    private async _loadData(causeError: boolean): Promise<void> {\r\n\r\n        try {\r\n            this.setState({error: null});\r\n\r\n            // Do the load\r\n            this.props.events.onViewLoading(ApiViewNames.Main);\r\n            const companies = await this.props.apiClient.getCompanyList({causeError});\r\n            this.props.events.onViewLoaded(ApiViewNames.Main);\r\n\r\n            this.setState({companies});\r\n\r\n        } catch (e) {\r\n\r\n            // Update state\r\n            const error = ErrorHandler.getFromException(e);\r\n            this.setState({companies: [], error});\r\n            this.props.events.onViewLoadFailed(ApiViewNames.Main, error);\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Output error details if required\r\n     */\r\n    private _renderError(): React.ReactNode {\r\n\r\n        if (this.state.error!.errorCode === ErrorCodes.loginRequired) {\r\n            return (\r\n                <>\r\n                </>\r\n            );\r\n        }\r\n\r\n        const errorProps = {\r\n            hyperlinkMessage: 'Problem Encountered in Companies View',\r\n            dialogTitle: 'Companies View Error',\r\n            error: this.state.error,\r\n            centred: true,\r\n        };\r\n\r\n        return (\r\n            <ErrorSummaryView {...errorProps}/>\r\n        );\r\n    }\r\n\r\n    /*\r\n     * Plumbing to ensure that the this parameter is available in async callbacks\r\n     */\r\n    private _setupCallbacks(): void {\r\n        this._loadData = this._loadData.bind(this);\r\n    }\r\n}\r\n","import React from 'react';\r\nimport {Company} from '../../api/entities/company';\r\nimport {CompaniesViewProps} from './companiesViewProps';\r\n\r\n/*\r\n * Render the companies view for the browser case\r\n */\r\nexport class CompaniesDesktopView extends React.Component<CompaniesViewProps> {\r\n\r\n    public constructor(props: CompaniesViewProps) {\r\n        super(props);\r\n    }\r\n\r\n    /*\r\n     * Render according to the current state\r\n     */\r\n    public render(): React.ReactNode {\r\n\r\n        return  (\r\n            <div className='card border-0'>\r\n                <div className='row card-header'>\r\n                    <div className='col-2 font-weight-bold text-center'>Account</div>\r\n                    <div className='col-2 font-weight-bold text-center'>Region</div>\r\n                    <div className='col-2' />\r\n                    <div className='col-2 font-weight-bold text-right'>Target USD</div>\r\n                    <div className='col-2 font-weight-bold text-right'>Investment USD</div>\r\n                    <div className='col-2 font-weight-bold text-right'># Investors</div>\r\n                </div>\r\n                <div className='card-body'>\r\n                    {this.props.companies.map((company) => this._renderItem(company))}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    /*\r\n     * Render a single company on a large screen\r\n     */\r\n    private _renderItem(company: Company) {\r\n\r\n        return (\r\n            <div className='row listRow' key={company.id}>\r\n                <div className='col-2 my-auto text-center'>\r\n                    {company.name}\r\n                </div>\r\n                <div className='col-2 my-auto text-center'>\r\n                    {company.region}\r\n                </div>\r\n                <div className='col-2 my-auto text-center'>\r\n                    <a href={`#company=${company.id}`}>\r\n                        View Transactions\r\n                    </a>\r\n                </div>\r\n                <div className='col-2 my-auto highlightcolor font-weight-bold text-right'>\r\n                    {Number(company.targetUsd).toLocaleString()}\r\n                </div>\r\n                <div className='col-2 my-auto highlightcolor font-weight-bold text-right'>\r\n                    {Number(company.investmentUsd).toLocaleString()}\r\n                </div>\r\n                <div className='col-2 my-auto font-weight-bold text-right'>\r\n                    {company.noInvestors}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport {Company} from '../../api/entities/company';\r\nimport {CompaniesViewProps} from './companiesViewProps';\r\n\r\n/*\r\n * Render the companies view for the mobile case\r\n */\r\nexport class CompaniesMobileView extends React.Component<CompaniesViewProps> {\r\n\r\n    public constructor(props: CompaniesViewProps) {\r\n        super(props);\r\n    }\r\n\r\n    /*\r\n     * Render according to the current state\r\n     */\r\n    public render(): React.ReactNode {\r\n\r\n        return  (\r\n            <div className='card border-0'>\r\n                <div className='card-header row'>\r\n                    <div className='col-12 text-center mx-auto font-weight-bold'>\r\n                        Company List\r\n                    </div>\r\n                </div>\r\n                <div className='card-body'>\r\n                    {this.props.companies.map((company) => this._renderItem(company))}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    /*\r\n     * Render a single company on a mobile device\r\n     */\r\n    private _renderItem(company: Company): React.ReactNode {\r\n\r\n        return (\r\n            <div key={company.id}>\r\n                <div className='row mobileHeaderRow'>\r\n                    <div className='col-6 h4'>\r\n                        <a href={`#company=${company.id}`}>\r\n                            {company.name}\r\n                        </a>\r\n                    </div>\r\n                    <div className='col-6 h4 font-weight-bold'>\r\n                        {company.region}\r\n                    </div>\r\n                </div>\r\n                <div className='row mobileRow'>\r\n                    <div className='col-6'>\r\n                        Target USD\r\n                    </div>\r\n                    <div className='col-6 highlightcolor font-weight-bold'>\r\n                        {Number(company.targetUsd).toLocaleString()}\r\n                    </div>\r\n                </div>\r\n                <div className='row mobileRow'>\r\n                    <div className='col-6'>\r\n                        Investment USD\r\n                    </div>\r\n                    <div className='col-6 highlightcolor font-weight-bold'>\r\n                        {Number(company.investmentUsd).toLocaleString()}\r\n                    </div>\r\n                </div>\r\n                <div className='row mobileRow'>\r\n                    <div className='col-6'>\r\n                        # Investors\r\n                    </div>\r\n                    <div className='col-6 font-weight-bold'>\r\n                        {company.noInvestors}\r\n                    </div>\r\n                </div>\r\n                <hr/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, {ErrorInfo} from 'react';\r\nimport {ErrorHandler} from '../../plumbing/errors/errorHandler';\r\nimport {ErrorBoundaryState} from './errorBoundaryState';\r\nimport {ErrorSummaryView} from './errorSummaryView';\r\n\r\n/*\r\n * Manages catching of rendering errors anywhere in the tree view during development\r\n */\r\nexport class ErrorBoundary extends React.Component<any, ErrorBoundaryState> {\r\n\r\n    /*\r\n     * Update state so the next render will show the fallback UI\r\n     */\r\n    public static getDerivedStateFromError(error: any): any {\r\n        return {error: ErrorHandler.getFromRenderError(error)};\r\n    }\r\n\r\n    /*\r\n     * Initialise to the default state where there is no error and children are rendered\r\n     */\r\n    public constructor(props: any) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            error: null,\r\n        };\r\n    }\r\n\r\n    /*\r\n     * Render children, or an error if a component has failed to render\r\n     */\r\n    public render(): React.ReactNode {\r\n\r\n        if (!this.state.error) {\r\n            return this.props.children;\r\n        }\r\n\r\n        const errorProps = {\r\n            hyperlinkMessage: 'Problem Encountered Rendering Views',\r\n            dialogTitle: 'Rendering Error',\r\n            error: this.state.error,\r\n            centred: true,\r\n        };\r\n        return (\r\n            <ErrorSummaryView {...errorProps}/>\r\n        );\r\n    }\r\n\r\n    /*\r\n     * Catch errors and translate for display\r\n     */\r\n    public componentDidCatch(error: Error, errorInfo: ErrorInfo): void {\r\n        const details = ErrorHandler.getFromRenderError(error, errorInfo.componentStack);\r\n        this.setState({error: details});\r\n    }\r\n}\r\n","import React from 'react';\r\nimport {ErrorLine} from '../../plumbing/errors/errorLine';\r\nimport {ErrorFormatter} from '../../plumbing/errors/errorFormatter';\r\nimport {ErrorDetailsViewProps} from './errorDetailsViewProps';\r\n\r\n/*\r\n * Manages rendering the error detailed view\r\n */\r\nexport class ErrorDetailsView extends React.Component<ErrorDetailsViewProps> {\r\n\r\n    public constructor(props: any) {\r\n        super(props);\r\n    }\r\n\r\n    /*\r\n     * Output the error if it exists\r\n     */\r\n    public render(): React.ReactNode {\r\n\r\n        const formatter = new ErrorFormatter();\r\n        const lines = formatter.getErrorLines(this.props.error);\r\n        const stack = formatter.getErrorStack(this.props.error);\r\n\r\n        return  (\r\n            <div className='card border-0'>\r\n                <div className='row'>\r\n                    <div className='col-10 errorcolor largetext text-center'>\r\n                        {this.props.title}\r\n                    </div>\r\n                    <div className='col-2 text-right'>\r\n                        <button onClick={this.props.handleClose} type='button'>x</button>\r\n                    </div>\r\n                </div>\r\n                <div className='row card-body'>\r\n                    <div className='col-12'>\r\n                        <div className='align-items-center mx-auto'>\r\n                            {lines.map((line: any) => this._renderErrorLine(line))}\r\n                            {this._renderErrorStack(stack)}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    /*\r\n     * Render a single error line\r\n     */\r\n    private _renderErrorLine(line: ErrorLine): React.ReactNode {\r\n\r\n        return (\r\n            <div className='row' key={line.id}>\r\n                <div className='col-4'>\r\n                    {line.label}\r\n                </div>\r\n                <div className={`col-8 ${line.valueStyle} font-weight-bold`}>\r\n                    {line.value}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    /*\r\n     * Render stack trace details in debug builds\r\n     */\r\n    private _renderErrorStack(line: ErrorLine | null): React.ReactNode {\r\n\r\n        if (!line) {\r\n            return (\r\n                <>\r\n                </>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <div className='row' key={line.id}>\r\n                    <div className='col-4'>\r\n                        &nbsp;\r\n                    </div>\r\n                    <div className='col-8'>\r\n                        &nbsp;\r\n                    </div>\r\n                </div>\r\n                <div className='row' key={line.id + 1}>\r\n                    <div className='col-4'>\r\n                        {line.label}\r\n                    </div>\r\n                    <div className='col-8 small'>\r\n                        {line.value}\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport ReactModal from 'react-modal';\r\nimport {ErrorCodes} from '../../plumbing/errors/errorCodes';\r\nimport {ErrorHandler} from '../../plumbing/errors/errorHandler';\r\nimport {ErrorDetailsView} from './errorDetailsView';\r\nimport {ErrorSummaryViewProps} from './errorSummaryViewProps';\r\nimport {ErrorSummaryViewState} from './errorSummaryViewState';\r\n\r\n/*\r\n * Manages rendering of error summary information\r\n */\r\nexport class ErrorSummaryView extends React.Component<ErrorSummaryViewProps, ErrorSummaryViewState> {\r\n\r\n    public constructor(props: ErrorSummaryViewProps) {\r\n        super(props);\r\n\r\n        // Initialise state and ensure that the error is the expected type for display\r\n        this.state = {\r\n            showDetails: false,\r\n            error: props.error ? ErrorHandler.getFromException(props.error) : null,\r\n        };\r\n\r\n        this._setupCallbacks();\r\n    }\r\n\r\n    /*\r\n     * If the error state changes we update state used for rendering\r\n     */\r\n    public static getDerivedStateFromProps(\r\n        nextProps: ErrorSummaryViewProps,\r\n        prevState: ErrorSummaryViewState): ErrorSummaryViewState | null {\r\n\r\n        // Return updated state\r\n        if (nextProps.error !== prevState.error) {\r\n            return {\r\n                error: nextProps.error,\r\n                showDetails: false,\r\n            };\r\n        }\r\n\r\n        // Indicate no changes to state\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Render the error hyperlink, and show the modal dialog when the user selects it\r\n     */\r\n    public render(): React.ReactNode {\r\n\r\n        // If there is no real error, do not render anything\r\n        if (!this.state.error || this.state.error.errorCode === ErrorCodes.loginRequired) {\r\n            return  (\r\n                <>\r\n                </>\r\n            );\r\n        }\r\n\r\n        if (this.props.centred) {\r\n\r\n            return (\r\n\r\n                // Render the hyperlink as a centred row in the main UI\r\n                <>\r\n                    <div className='row'>\r\n                        <div className='col-6 text-center mx-auto'>\r\n                            {this._renderHyperlink()}\r\n                        </div>\r\n                    </div>\r\n                    {this._renderModalDialog()}\r\n                </>\r\n\r\n            );\r\n        } else {\r\n\r\n            return (\r\n\r\n                // Render the hyperlink in a more compact form, used for user info errors\r\n                <>\r\n                    {this._renderHyperlink()}\r\n                    {this._renderModalDialog()}\r\n                </>\r\n            );\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Return the markup for the hyperlink\r\n     */\r\n    private _renderHyperlink(): React.ReactNode {\r\n\r\n        return (\r\n            <a href='#' className='errorcolor largetext text-center' onClick={this._handleSummaryClick}>\r\n                {this.props.hyperlinkMessage}\r\n            </a>\r\n        );\r\n    }\r\n\r\n    /*\r\n     * Return the markup for the modal dialog\r\n     */\r\n    private _renderModalDialog(): React.ReactNode {\r\n\r\n        const errorDetailsProps = {\r\n            title: this.props.dialogTitle,\r\n            error: this.state.error!,\r\n            handleClose: this._handleDetailsDialogClose,\r\n        };\r\n\r\n        const customStyles = {\r\n            overlay: {\r\n                backgroundColor: 'lightgray',\r\n            },\r\n        };\r\n\r\n        return (\r\n\r\n            <ReactModal\r\n                isOpen={this.state.showDetails}\r\n                onRequestClose={this._handleDetailsDialogClose}\r\n                contentLabel={this.props.dialogTitle}\r\n                style={customStyles}\r\n            >\r\n                <ErrorDetailsView {...errorDetailsProps}/>\r\n            </ReactModal>\r\n        );\r\n    }\r\n\r\n    /*\r\n     * Invoke error details when the link is clicked\r\n     */\r\n    private _handleSummaryClick(event: React.MouseEvent<HTMLAnchorElement>) {\r\n        event.preventDefault();\r\n        this.setState({showDetails: true});\r\n    }\r\n\r\n    /*\r\n     * Reset state when the dialog's close button is clicked\r\n     */\r\n    private _handleDetailsDialogClose() {\r\n        this.setState({showDetails: false});\r\n    }\r\n\r\n    /*\r\n     * Ensure that the this parameter is available in callbacks\r\n     */\r\n    private _setupCallbacks() {\r\n        this._handleSummaryClick = this._handleSummaryClick.bind(this);\r\n        this._handleDetailsDialogClose = this._handleDetailsDialogClose.bind(this);\r\n    }\r\n}\r\n","import React from 'react';\r\nimport {HeaderButtonsViewProps} from './headerButtonsViewProps';\r\n\r\n/*\r\n * Render the header buttons\r\n */\r\nexport class HeaderButtonsView extends React.Component<HeaderButtonsViewProps> {\r\n\r\n    private _longPressStartTime: number | null;\r\n    private readonly _longPressMilliseconds: number;\r\n\r\n    public constructor(props: HeaderButtonsViewProps) {\r\n        super(props);\r\n\r\n        this._longPressStartTime = null;\r\n        this._longPressMilliseconds = 2000;\r\n        this._setupCallbacks();\r\n    }\r\n\r\n    /*\r\n     * Render buttons and callback the parent when clicked\r\n     */\r\n    public render(): React.ReactNode {\r\n\r\n        const disabled = !this.props.sessionButtonsEnabled;\r\n        return  (\r\n            <div className='row'>\r\n                <div className='col col-one-fifth my-2 d-flex p-1'>\r\n                    <button\r\n                        onClick={this.props.handleHomeClick}\r\n                        className='btn btn-primary btn-block p-1'\r\n                    >\r\n                        <small>Home</small>\r\n                    </button>\r\n                </div>\r\n                <div\r\n                    className='col col-one-fifth my-2 d-flex p-1'\r\n                    onTouchStart={this._handleReloadPress}\r\n                    onTouchEnd={this._handleReloadRelease}\r\n                    onMouseDown={this._handleReloadPress}\r\n                    onMouseUp={this._handleReloadRelease}\r\n                >\r\n                    <button\r\n                        className='btn btn-primary btn-block p-1'\r\n                        disabled={disabled}\r\n                    >\r\n                        <small>Reload Data</small>\r\n                    </button>\r\n                </div>\r\n                <div className='col col-one-fifth my-2 d-flex p-1'>\r\n                    <button\r\n                        onClick={this.props.handleExpireAccessTokenClick}\r\n                        className='btn btn-primary btn-block p-1'\r\n                        disabled={disabled}\r\n                    >\r\n                        <small>Expire Access Token</small>\r\n                    </button>\r\n                </div>\r\n                <div className='col col-one-fifth my-2 d-flex p-1'>\r\n                    <button\r\n                        onClick={this.props.handleExpireRefreshTokenClick}\r\n                        className='btn btn-primary btn-block p-1'\r\n                        disabled={disabled}\r\n                    >\r\n                        <small>Expire Refresh Token</small>\r\n                    </button>\r\n                </div>\r\n                <div className='col col-one-fifth my-2 d-flex p-1'>\r\n                    <button\r\n                        onClick={this.props.handleLogoutClick}\r\n                        className='btn btn-primary btn-block p-1'\r\n                        disabled={disabled}\r\n                    >\r\n                        <small>Logout</small>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    /*\r\n     * When refresh is clicked, measure the start time\r\n     */\r\n    private _handleReloadPress(): void {\r\n\r\n        if (!this.props.sessionButtonsEnabled) {\r\n            return;\r\n        }\r\n\r\n        this._longPressStartTime = Date.now();\r\n    }\r\n\r\n    /*\r\n     * The sample uses a long press to simulate an API 500 error, for demonstration purposes\r\n     * Our solutions then demonstrate how it is reported in the UI and looked up via Elastic Search\r\n     */\r\n    private _handleReloadRelease(): void {\r\n\r\n        if (!this.props.sessionButtonsEnabled) {\r\n            return;\r\n        }\r\n\r\n        if (this._isLongPress()) {\r\n\r\n            // The button has been long pressed which we use as a trigger to simulate an exception\r\n            // causeError = true means the UI to sends a header to the API to instruct it to simulate a 500 error\r\n            this.props.handleReloadDataClick(true);\r\n\r\n        } else {\r\n\r\n            // In all other cases we reload data normally\r\n            this.props.handleReloadDataClick(false);\r\n        }\r\n    }\r\n\r\n    /*\r\n     * A utility to calculate whether a long press has occurred\r\n     */\r\n    private _isLongPress(): boolean {\r\n\r\n        if (!this._longPressStartTime) {\r\n            return false;\r\n        }\r\n\r\n        const timeTaken = Date.now() - this._longPressStartTime;\r\n        this._longPressStartTime = null;\r\n        return (timeTaken > this._longPressMilliseconds);\r\n    }\r\n\r\n    /*\r\n     * Plumbing to ensure that the this parameter is available in async callbacks\r\n     */\r\n    private _setupCallbacks(): void {\r\n        this._handleReloadPress = this._handleReloadPress.bind(this);\r\n        this._handleReloadRelease = this._handleReloadRelease.bind(this);\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\n/*\r\n * Render the main heading\r\n */\r\nexport class HeadingView extends React.Component {\r\n\r\n    public render(): React.ReactNode {\r\n\r\n        return (\r\n            <h2>OAuth Demo App</h2>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport {SessionManager} from '../../plumbing/utilities/sessionManager';\r\nimport {SessionViewProps} from './sessionViewProps';\r\n\r\n/*\r\n * Render the session id used by API logs\r\n */\r\nexport class SessionView extends React.Component<SessionViewProps> {\r\n\r\n    private readonly _sessionId: string;\r\n\r\n    public constructor(props: SessionViewProps) {\r\n        super(props);\r\n        this._sessionId = SessionManager.get();\r\n    }\r\n\r\n    /*\r\n     * Render the session id hen data is loaded and API calls are in effect\r\n     */\r\n    public render(): React.ReactNode {\r\n\r\n        if (!this.props.isVisible) {\r\n            return (\r\n                <>\r\n                </>\r\n            );\r\n        }\r\n\r\n        return  (\r\n            <div className='sessionid text-right mx-auto'>\r\n                <small>{`API Session Id: ${this._sessionId}`}</small>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport {UserInfoView} from '../userInfo/userInfoView';\r\nimport {HeadingView} from './headingView';\r\nimport {TitleViewProps} from './titleViewProps';\r\n\r\n/*\r\n * Render the title area, which contains a heading and user info\r\n */\r\nexport class TitleView extends React.Component<TitleViewProps> {\r\n\r\n    public constructor(props: TitleViewProps) {\r\n        super(props);\r\n    }\r\n\r\n    /*\r\n     * Output child views\r\n     */\r\n    public render(): React.ReactNode {\r\n\r\n        // If there are no user info props yet, just display the title\r\n        if (!this.props.userInfo) {\r\n\r\n            return  (\r\n                <div className='row'>\r\n                    <div className='col-8 my-auto'>\r\n                        <HeadingView />\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        // Otherwise render user info also\r\n        return  (\r\n            <div className='row'>\r\n                <div className='col-8 my-auto'>\r\n                    <HeadingView />\r\n                </div>\r\n                <div className='col-4 my-auto'>\r\n                    <UserInfoView {...this.props.userInfo}/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport {LoginRequiredViewProps} from './loginRequiredViewProps';\r\n\r\n/*\r\n * Render the simple login required view\r\n */\r\nexport class LoginRequiredView extends React.Component<LoginRequiredViewProps> {\r\n\r\n    public constructor(props: LoginRequiredViewProps) {\r\n        super(props);\r\n        props.onLoading();\r\n    }\r\n\r\n    /*\r\n     * Render the simple logout view\r\n     */\r\n    public render(): React.ReactNode {\r\n\r\n        return  (\r\n            <div className='row'>\r\n                <div className='col-12 text-center mx-auto'>\r\n                    <h6>\r\n                        You are logged out - click HOME to sign in ...\r\n                    </h6>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport {ErrorCodes} from '../../plumbing/errors/errorCodes';\r\nimport {ErrorHandler} from '../../plumbing/errors/errorHandler';\r\nimport {UIError} from '../../plumbing/errors/uiError';\r\nimport {EventEmitter} from '../../plumbing/events/eventEmitter';\r\nimport {EventNames} from '../../plumbing/events/eventNames';\r\nimport {ErrorSummaryView} from '../errors/errorSummaryView';\r\nimport {ApiViewNames} from '../utilities/apiViewNames';\r\nimport {TransactionsContainerProps} from './transactionsContainerProps';\r\nimport {TransactionsContainerState} from './transactionsContainerState';\r\nimport {TransactionsMainView} from './transactionsMainView';\r\n\r\n/*\r\n * Render the transactions view to replace the existing view\r\n */\r\nexport class TransactionsContainer extends React.Component<TransactionsContainerProps, TransactionsContainerState> {\r\n\r\n    /*\r\n     * If the user changes the transaction to a new company the browser bar, the change is received here\r\n     */\r\n    public static getDerivedStateFromProps(\r\n        nextProps: TransactionsContainerProps,\r\n        prevState: TransactionsContainerState): TransactionsContainerState | null {\r\n\r\n        // Return updated state\r\n        if (nextProps.match.params.id !== prevState.companyId) {\r\n            return {...prevState, companyId: nextProps.match.params.id};\r\n        }\r\n\r\n        // Indicate no changes to state\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Initial state is received via the React Router\r\n     */\r\n    public constructor(props: TransactionsContainerProps) {\r\n\r\n        super(props);\r\n        props.onLoading();\r\n\r\n        // Initialise state, and the initial company id is supplied via a path segment\r\n        this.state = {\r\n            companyId: this.props.match.params.id,\r\n            error: null,\r\n            data: null,\r\n        };\r\n\r\n        this._setupCallbacks();\r\n    }\r\n\r\n    /*\r\n     * Render according to the current state and the type of device\r\n     */\r\n    public render(): React.ReactNode {\r\n\r\n        // Render an error on failure\r\n        if (this.state.error) {\r\n            return this._renderError();\r\n        }\r\n\r\n        // Display nothing until there is data\r\n        if (!this.state.data) {\r\n            return (\r\n                <>\r\n                </>\r\n            );\r\n        }\r\n\r\n        // Display the desktop or mobile view otherwise\r\n        const props = {\r\n            data: this.state.data,\r\n        };\r\n\r\n        return  (\r\n            <TransactionsMainView {...props}/>\r\n        );\r\n    }\r\n\r\n    /*\r\n     * Load data then listen for the reload event\r\n     */\r\n    public async componentDidMount(): Promise<void> {\r\n\r\n        EventEmitter.subscribe(EventNames.ON_RELOAD_MAIN, this._loadData);\r\n        await this._loadData(false);\r\n    }\r\n\r\n    /*\r\n     * Reload data when the user types a different company id in the browser\r\n     */\r\n    public async componentDidUpdate(\r\n        prevProps: TransactionsContainerProps,\r\n        prevState: TransactionsContainerState): Promise<void> {\r\n\r\n        if (this.state.companyId !== prevState.companyId) {\r\n            await this._loadData(false);\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Unsubscribe when we unload\r\n     */\r\n    public async componentWillUnmount(): Promise<void> {\r\n        EventEmitter.unsubscribe(EventNames.ON_RELOAD_MAIN, this._loadData);\r\n    }\r\n\r\n    /*\r\n     * Get data from the API and update state\r\n     */\r\n    private async _loadData(causeError: boolean): Promise<void> {\r\n\r\n        try {\r\n            this.setState({error: null});\r\n\r\n            // Get data from the API\r\n            this.props.events.onViewLoading(ApiViewNames.Main);\r\n            const data = await this.props.apiClient.getCompanyTransactions(this.state.companyId, {causeError});\r\n            this.props.events.onViewLoaded(ApiViewNames.Main);\r\n\r\n            this.setState({data});\r\n\r\n        } catch (e) {\r\n\r\n            // Handle the error\r\n            const error = ErrorHandler.getFromException(e);\r\n            const isExpected = this._isExpectedApiError(error);\r\n            if (isExpected) {\r\n\r\n                // For 'expected' errors, return to the home view\r\n                this.props.events.onViewLoaded(ApiViewNames.Main);\r\n                location.hash = '#';\r\n\r\n            } else {\r\n\r\n                // Indicate failure\r\n                this.setState({data: null, error});\r\n                this.props.events.onViewLoadFailed(ApiViewNames.Main, error);\r\n            }\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Output error details if required\r\n     */\r\n    private _renderError(): React.ReactNode {\r\n\r\n        if (this.state.error!.errorCode === ErrorCodes.loginRequired) {\r\n            return (\r\n                <>\r\n                </>\r\n            );\r\n        }\r\n\r\n        const errorProps = {\r\n            hyperlinkMessage: 'Problem Encountered in Transactions View',\r\n            dialogTitle: 'Transactions View Error',\r\n            error: this.state.error,\r\n            centred: true,\r\n        };\r\n        return (\r\n            <ErrorSummaryView {...errorProps}/>\r\n        );\r\n    }\r\n\r\n    /*\r\n     * Handle 'business errors' received from the API\r\n     */\r\n    private _isExpectedApiError(error: UIError): boolean {\r\n\r\n        if (error.statusCode === 404 && error.errorCode === ErrorCodes.companyNotFound) {\r\n\r\n            // User typed an id value outside of allowed company ids\r\n            return true;\r\n\r\n        }\r\n\r\n        if (error.statusCode === 400 && error.errorCode === ErrorCodes.invalidCompanyId) {\r\n\r\n            // User typed an invalid id such as 'abc'\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /*\r\n     * Plumbing to ensure that the this parameter is available in async callbacks\r\n     */\r\n    private _setupCallbacks(): void {\r\n        this._loadData = this._loadData.bind(this);\r\n    }\r\n}\r\n","import React from 'react';\r\nimport {Transaction} from '../../api/entities/transaction';\r\nimport {TransactionsViewProps} from './transactionsViewProps';\r\n\r\n/*\r\n * Render the transactions main view\r\n */\r\nexport class TransactionsMainView extends React.Component<TransactionsViewProps> {\r\n\r\n    public constructor(props: TransactionsViewProps) {\r\n        super(props);\r\n    }\r\n\r\n    /*\r\n     * Render the data on a wide screen\r\n     */\r\n    public render(): React.ReactNode {\r\n\r\n        return  this.props.data &&\r\n                (\r\n                    <div className='card border-0'>\r\n                        <div className='card-header row font-weight-bold'>\r\n                            <div className='col-12 text-center mx-auto font-weight-bold'>\r\n                                Today&apos;s Transactions for {this.props.data.company.name}\r\n                            </div>\r\n                        </div>\r\n                        <div className='row'>\r\n                            {this.props.data.transactions.map((transaction) => this._renderTransaction(transaction))}\r\n                        </div>\r\n                    </div>\r\n                );\r\n    }\r\n\r\n    /*\r\n     * Render a single transaction item\r\n     */\r\n    private _renderTransaction(transaction: Transaction) {\r\n\r\n        return (\r\n            <div className='col-lg-4 col-md-6 col-xs-12' key={transaction.id}>\r\n                <div className='card'>\r\n                    <div className='card-body'>\r\n                        <div className='row'>\r\n                            <div className='col-6'>\r\n                                Transaction Id\r\n                            </div>\r\n                            <div className='col-6 text-right valuecolor font-weight-bold'>\r\n                                {transaction.id}\r\n                            </div>\r\n                        </div>\r\n                        <div className='row'>\r\n                            <div className='col-6'>\r\n                                Investor Id\r\n                            </div>\r\n                            <div className='col-6 text-right valuecolor font-weight-bold'>\r\n                                {transaction.investorId}\r\n                            </div>\r\n                        </div>\r\n                        <div className='row'>\r\n                            <div className='col-6'>\r\n                                Amount USD\r\n                            </div>\r\n                            <div className='col-6 text-right highlightcolor font-weight-bold'>\r\n                                {Number(transaction.amountUsd).toLocaleString()}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport {ErrorCodes} from '../../plumbing/errors/errorCodes';\r\nimport {ErrorHandler} from '../../plumbing/errors/errorHandler';\r\nimport {EventEmitter} from '../../plumbing/events/eventEmitter';\r\nimport {EventNames} from '../../plumbing/events/eventNames';\r\nimport {ErrorSummaryView} from '../errors/errorSummaryView';\r\nimport {ApiViewNames} from '../utilities/apiViewNames';\r\nimport {UserInfoViewProps} from './userInfoViewProps';\r\nimport {UserInfoViewState} from './userInfoViewState';\r\n\r\n/*\r\n * A simple component to render the logged in user\r\n */\r\nexport class UserInfoView extends React.Component<UserInfoViewProps, UserInfoViewState> {\r\n\r\n    /*\r\n     * If the logged out state changes we update state used for rendering\r\n     */\r\n    public static getDerivedStateFromProps(\r\n        nextProps: UserInfoViewProps,\r\n        prevState: UserInfoViewState): UserInfoViewState | null {\r\n\r\n        // Return updated state\r\n        if (nextProps.shouldLoad !== prevState.shouldLoad) {\r\n            return {...prevState, shouldLoad: nextProps.shouldLoad};\r\n        }\r\n\r\n        // Indicate no changes to state\r\n        return null;\r\n    }\r\n\r\n    public constructor(props: UserInfoViewProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            shouldLoad: props.shouldLoad,\r\n            claims: null,\r\n            error: null,\r\n        };\r\n\r\n        this._setupCallbacks();\r\n    }\r\n\r\n    /*\r\n     * Render user info both before and after received\r\n     */\r\n    public render(): React.ReactNode {\r\n\r\n        // Render errors if there are technical problems getting user info\r\n        if (this.state.error && this.state.error.errorCode !== ErrorCodes.loginRequired) {\r\n\r\n            const errorProps = {\r\n                hyperlinkMessage: 'Problem Encountered',\r\n                dialogTitle: 'User Info Error',\r\n                error: this.state.error,\r\n                centred: false,\r\n            };\r\n            return (\r\n                <div className='text-right mx-auto'>\r\n                    <ErrorSummaryView {...errorProps}/>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        // Render nothing when logged out\r\n        if (!this.state.shouldLoad || !this.state.claims) {\r\n            return (\r\n                <>\r\n                </>\r\n            );\r\n        }\r\n\r\n        // Render the logged in user name otherwise\r\n        const name = `${this.state.claims.givenName} ${this.state.claims.familyName}`;\r\n        return  this.state.claims &&\r\n                (\r\n                    <div className='text-right mx-auto'>\r\n                        <p className='font-weight-bold'>{name}</p>\r\n                    </div>\r\n                );\r\n    }\r\n\r\n    /*\r\n     * Load data then listen for the reload event\r\n     */\r\n    public async componentDidMount(): Promise<void> {\r\n\r\n        EventEmitter.subscribe(EventNames.ON_RELOAD_USERINFO, this._loadData);\r\n        await this._loadData(false);\r\n    }\r\n\r\n    /*\r\n     * Unsubscribe when we unload\r\n     */\r\n    public async componentWillUnmount(): Promise<void> {\r\n        EventEmitter.unsubscribe(EventNames.ON_RELOAD_USERINFO, this._loadData);\r\n    }\r\n\r\n    /*\r\n     * Reload data when the user chooses to resume from the logged out page\r\n     */\r\n    public async componentDidUpdate(\r\n        prevProps: UserInfoViewProps,\r\n        prevState: UserInfoViewState): Promise<void> {\r\n\r\n        if (!prevState.shouldLoad && this.state.shouldLoad) {\r\n            await this._loadData(false);\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Load data when requested\r\n     */\r\n    private async _loadData(causeError: boolean): Promise<void> {\r\n\r\n        try {\r\n\r\n            // We do not load when the logged out view is active\r\n            if (!this.state.shouldLoad) {\r\n                this.props.events.onViewLoaded(ApiViewNames.UserInfo);\r\n                return;\r\n            }\r\n\r\n            this.setState({error: null});\r\n\r\n            // Get user info\r\n            this.props.events.onViewLoading(ApiViewNames.UserInfo);\r\n            const claims = await this.props.apiClient.getUserInfo({causeError});\r\n            this.props.events.onViewLoaded(ApiViewNames.UserInfo);\r\n\r\n            this.setState({claims});\r\n\r\n        } catch (e) {\r\n\r\n            const error = ErrorHandler.getFromException(e);\r\n            this.setState({claims: null, error});\r\n            this.props.events.onViewLoadFailed(ApiViewNames.UserInfo, error);\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Plumbing to ensure that the this parameter is available in async callbacks\r\n     */\r\n    private _setupCallbacks(): void {\r\n        this._loadData = this._loadData.bind(this);\r\n    }\r\n}\r\n","import {ErrorCodes} from '../../plumbing/errors/errorCodes';\r\nimport {UIError} from '../../plumbing/errors/uiError';\r\nimport {ApiViewNames} from './apiViewNames';\r\n\r\n/*\r\n * A helper class to keep track of views that call APIs and whether a login_required error has been received\r\n */\r\nexport class ApiViewEvents {\r\n\r\n    // A map of view names to their loaded state\r\n    private _views: [string, boolean][];\r\n\r\n    // An overall login required flag\r\n    private _loginRequired: boolean;\r\n\r\n    // Called back when all views have tried to load, if a login redirect is needed\r\n    private readonly _onLoginRequiredAction: () => void;\r\n\r\n    // Called back when the main view's load state changes\r\n    private readonly _onMainLoadStateChanged: (enabled: boolean) => void;\r\n\r\n    /*\r\n     * Set the initial state at construction\r\n     */\r\n    public constructor(\r\n        onLoginRequiredAction: () => void,\r\n        onMainLoadStateChanged: (enabled: boolean) => void) {\r\n\r\n        this._views = [];\r\n        this._loginRequired = false;\r\n        this._onLoginRequiredAction = onLoginRequiredAction;\r\n        this._onMainLoadStateChanged = onMainLoadStateChanged;\r\n        this._setupCallbacks();\r\n    }\r\n\r\n    /*\r\n     * Each view is added along with an initial unloaded state\r\n     */\r\n    public addView(name: string): void {\r\n        this._views.push([name, false]);\r\n    }\r\n\r\n    /*\r\n     * Handle loading notifications, which will disable the header buttons\r\n     */\r\n    public onViewLoading(name: string): void {\r\n\r\n        this._updateLoadState(name, false);\r\n\r\n        if (name === ApiViewNames.Main) {\r\n            this._onMainLoadStateChanged(false);\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Update state when loaded, which may trigger a login redirect once all views are loaded\r\n     */\r\n    public onViewLoaded(name: string): void {\r\n\r\n        this._updateLoadState(name, true);\r\n\r\n        if (name === ApiViewNames.Main) {\r\n            this._onMainLoadStateChanged(true);\r\n        }\r\n\r\n        this._triggerLoginIfRequired();\r\n    }\r\n\r\n    /*\r\n     * Update state when there is a load error, which may trigger a login redirect once all views are loaded\r\n     */\r\n    public onViewLoadFailed(name: string, error: UIError): void {\r\n\r\n        this._updateLoadState(name, true);\r\n\r\n        if (error.errorCode === ErrorCodes.loginRequired) {\r\n            this._loginRequired = true;\r\n        }\r\n\r\n        this._triggerLoginIfRequired();\r\n    }\r\n\r\n    /*\r\n     * Reset state when the Reload Data button is clicked\r\n     */\r\n    public clearState(): void {\r\n        this._views.forEach((i) => i[1] = false);\r\n        this._loginRequired = false;\r\n    }\r\n\r\n    /*\r\n     * Update whether a view has finished trying to load\r\n     */\r\n    private _updateLoadState(name: string, value: boolean) {\r\n\r\n        const found = this._views.find(i => i[0] === name);\r\n        if (found) {\r\n            found[1] = value;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * If all views are loaded and one or more has reported login required, then trigger a redirect\r\n     */\r\n    private _triggerLoginIfRequired(): void {\r\n\r\n        const allViewsLoaded = this._views.filter(i => i[1] === true).length === this._views.length;\r\n        if (allViewsLoaded && this._loginRequired) {\r\n            this._onLoginRequiredAction();\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Plumbing to ensure that the this parameter is available in async callbacks\r\n     */\r\n    private _setupCallbacks(): void {\r\n        this.onViewLoading = this.onViewLoading.bind(this);\r\n        this.onViewLoaded = this.onViewLoaded.bind(this);\r\n        this.onViewLoadFailed = this.onViewLoadFailed.bind(this);\r\n    }\r\n}\r\n","/*\r\n * Constant values used with views that get API data\r\n */\r\nexport class ApiViewNames {\r\n\r\n    // A view that occupies the main view area\r\n    public static readonly Main = 'main';\r\n\r\n    // The user info view\r\n    public static readonly UserInfo = 'userInfo';\r\n}","/*\r\n * A utility class to determine the current route\r\n */\r\nexport class RouteHelper {\r\n\r\n    /*\r\n     * Return true if we are not in the logged out view or the transactions view\r\n     */\r\n    public static isInHomeView(): boolean {\r\n        return (location.hash.indexOf('loggedout') === -1) && (location.hash.indexOf('company=') === -1);\r\n    }\r\n}\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n// the startup function\n// It's empty as some runtime module handles the default behavior\n__webpack_require__.x = x => {};\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// Promise = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t\"app\": 0\n};\n\nvar deferredModules = [\n\t[\"./index.tsx\",\"vendor\"]\n];\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\nvar checkDeferredModules = x => {};\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime, executeModules] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0, resolves = [];\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tresolves.push(installedChunks[chunkId][0]);\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\tfor(moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) runtime(__webpack_require__);\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\twhile(resolves.length) {\n\t\tresolves.shift()();\n\t}\n\n\t// add entry modules from loaded chunk to deferred list\n\tif(executeModules) deferredModules.push.apply(deferredModules, executeModules);\n\n\t// run deferred modules when all chunks ready\n\treturn checkDeferredModules();\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunk\"] = self[\"webpackChunk\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));\n\nfunction checkDeferredModulesImpl() {\n\tvar result;\n\tfor(var i = 0; i < deferredModules.length; i++) {\n\t\tvar deferredModule = deferredModules[i];\n\t\tvar fulfilled = true;\n\t\tfor(var j = 1; j < deferredModule.length; j++) {\n\t\t\tvar depId = deferredModule[j];\n\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferredModules.splice(i--, 1);\n\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n\t\t}\n\t}\n\tif(deferredModules.length === 0) {\n\t\t__webpack_require__.x();\n\t\t__webpack_require__.x = x => {};\n\t}\n\treturn result;\n}\nvar startup = __webpack_require__.x;\n__webpack_require__.x = () => {\n\t// reset startup function so it can be called again when more startup code is added\n\t__webpack_require__.x = startup || (x => {});\n\treturn (checkDeferredModules = checkDeferredModulesImpl)();\n};","// run startup\nvar __webpack_exports__ = __webpack_require__.x();\n"],"sourceRoot":""}