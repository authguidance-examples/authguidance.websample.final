CLOUD WEB
---------
1. Implement the Serverless Edge Lambdas with a single pipeline stage
   Get a hello world working for requests to https://web.authguidance-examples.com/spa2/reverse-proxy

2. Port cookie logic to the above lambda and ensure I can run the logic locally

SECURITY
--------
1. Refine local storage further - remove token keys from storage
   Restrict to just the needed protocol claims

2. Understand state storage better - in local storage
   Can I use session storage?

3. Use NodeJS encrypted cookies

4. Use CSRF protection for token endpoint methods that receive a cookie

SPA
---
1. Get rid of trailing backslash in redirect uri

2. Fix weird ReactJS logout effect of redirecting from #/loggedout to #loggedout to #/loggedout   

CLOUD API
---------
1. Fix main Serverless API to use multiple pipeline stages, each with a single allowed CORS origin

FINALISE ONCE PAST ALL RISKS
----------------------------
1. Remove Web Static Content from .Net Core APIs

2. Merge changes to master and redeploy main SPA

3. Test on Android and iOS browsers

4. Update blog instructions on how to run Final SPA and Final APIs

GOALS FOR BLOG POST ON REVERSE PROXY
------------------------------------
1. SPA delivered directly via CDN without proxy in front

2. Calls to APIs not reverse proxied and compromised under load

3. SPA uses OIDC Client security to validate all responses in a standard way

4. Secure browser with no refresh tokens and in memory access / id tokens