service: weblambdas

# Cloudfront edge lambdas must be deployed to the us-east-1 region
provider:
  name: aws
  runtime: nodejs18.x
  region: us-east-1
  profile: default
  stage: ${self:custom.config.settings.stage}

custom:
  config: ${file(environments/${opt:stage, 'serverless'}.yml)}

functions:

  # The default document handler deals with returning the default index.html document
  defaultDocument:
    handler: dist/defaultDocument.handler
    memorySize: 128
    timeout: 5
    events:
      - preExistingCloudFront:
          distributionId: ${self:custom.config.settings.distributionId}
          eventType: origin-request
          pathPattern: '*'

  # A lambda to add standard security headers, including the Content Security Policy
  securityHeaders:
    handler: dist/securityHeaders.handler
    memorySize: 128
    timeout: 5
    events:
      - preExistingCloudFront:
          distributionId: ${self:custom.config.settings.distributionId}
          eventType: origin-response
          pathPattern: '*'

# Use patterns to remove files we don't need to deploy
package:
  patterns:
  - '!.vscode/**'
  - '!environments/**'
  - '!src/**'
  - '!node_modules/**'
  - '!test/**'
  - '!ts*.json'
  - '!package-lock.json'
  - '!README.md'

plugins:
  # Add the lambda edge function to our existing Cloudfront distribution rather than creating a new one
  - serverless-lambda-edge-pre-existing-cloudfront

# The plugin generates a Serverless schema validation warning that we can't fix, so disable it
configValidationMode: off

# Configure the resources that serverless creates
resources:
  Resources:

    # This ensures that the role created by Serverless has access to edgelambda.amazonaws.com
    # https://www.pveller.com/lambda-edge-serverless/
    IamRoleLambdaExecution:
      Type: 'AWS::IAM::Role'
      Properties:
        AssumeRolePolicyDocument:
          Statement: 
            - Effect: Allow
              Principal: 
                Service:
                  - lambda.amazonaws.com
                  - edgelambda.amazonaws.com
    
    # Limit cloudwatch log retention for our Lambda Edge functions
    DefaultDocumentLogGroup:
      Properties:
        RetentionInDays: '5'
    SecurityHeadersLogGroup:
      Properties:
        RetentionInDays: '5'
